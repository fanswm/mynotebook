Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-12-11T16:35:09+08:00

====== 5 正确的关机方法 sync,shutdown ======
Created Monday 11 December 2017


观察系统的使用状态：
__如果要看目前有谁在在线，可以下达『who』这个命令__，
__而如果要看网络的联机状态，可以下达 『 netstat -a 』这个命令，__
__而要看背景运行的程序可以运行『 ps -aux 』这个命令__。
使用这些命令可以让你稍微了解主机目前的使用状态！当然啰，就可以让你判断是否可以关机了 （这些命令在后面Linux常用命令中会提及喔！）

通知在线使用者关机的时刻：
要关机前总得给在线的使用者一些时间来结束他们的工作，所以，这个时候你可以使用 shutdown 的特别命令来达到此一功能。

正确的关机命令使用：
例如 shutdown 与 reboot 两个命令！
所以底下我们就来谈一谈几个与关机/重新启动相关的命令啰！

将数据同步写入硬盘中的命令： sync
惯用的关机命令： shutdown
重新启动，关机： reboot, halt, poweroff
Tips:
由于Linux系统的关机/重新启动是很重大的系统运行，因此只有root才能够进行例如shutdown, reboot等命令。 不过在某些distributions当中，例如我们这里谈到的CentOS系统，他允许你在本机前的tty7使用图形接口登陆时， 可以用一般账号来关机或重新启动！但某些distributions则在你要关机时，他会要你输入root的密码呢！^_^	
 数据同步写入磁盘： sync
在第零章、计算器概论里面我们谈到过数据在计算机中运行的模式， 所有的数据都得要被读入内存后才能够被CPU所处理，但是数据又常常需要由内存写回硬盘当中(例如储存的动作)。 由于硬盘的速度太慢(相对于内存来说)，如果常常让数据在内存与硬盘中来回写入/读出，系统的效能就不会太好。

因此在Linux系统中，为了加快数据的读取速度，所以在默认的情况中， 某些已经加载内存中的数据将不会直接被写回硬盘，而是先缓存在内存当中，如此一来， 如果一个数据被你重复的改写，那么由于他尚未被写入硬盘中，因此可以直接由内存当中读取出来， 在速度上一定是快上相当多的！

不过，如此一来也造成些许的困扰，那就是万一你的系统因为某些特殊情况造成不正常关机 (例如停电或者是不小心踢到power)时，由于数据尚未被写入硬盘当中，哇！所以就会造成数据的升级不正常啦！ 那要怎么办呢？这个时候就需要sync这个命令来进行数据的写入动作啦！ 直接在文字接口下输入sync，那么在内存中尚未被升级的数据，就会被写入硬盘中！所以，这个命令在系统关机或重新启动之前， 很重要喔！最好多运行几次！

虽然目前的 shutdown/reboot/halt 等等命令均已经在关机前进行了 sync 这个工具的呼叫， 不过，多做几次总是比较放心点～呵呵～

[root@www ~]# sync 
Tips:
事实上sync也可以被一般账号使用喔！只不过一般账号用户所升级的硬盘数据就仅有自己的数据， 不像root可以升级整个系统中的数据了。	
 惯用的关机命令： shutdown
由于Linux的关机是那么重要的工作，因此除了你是在主机前面以tty7图形接口来登陆系统时， 不论用什么身份都能够关机之外，若你是使用远程管理工具(如透过pietty使用ssh服务来从其他计算机登陆主机)， 那关机就只有root有权力而已喔！

嗯！那么就来关机试试看吧！我们较常使用的是shutdown这个命令，而这个命令会通知系统内的各个程序 (processes)，并且将通知系统中的run-level内的一些服务来关闭。shutdown可以达成如下的工作：

可以自由选择关机模式：是要关机、重新启动或进入单人操作模式均可；
可以配置关机时间: 可以配置成现在立刻关机, 也可以配置某一个特定的时间才关机。
可以自定义关机信息：在关机之前，可以将自己配置的信息传送给在线 user 。
可以仅发出警告信息：有时有可能你要进行一些测试，而不想让其他的使用者干扰， 或者是明白的告诉使用者某段时间要注意一下！这个时候可以使用 shutdown 来吓一吓使用者，但却不是真的要关机啦！
可以选择是否要 fsck 检查文件系统 。
那么shutdown的语法是如何呢？聪明的读者大概已经开始找『男人』了！没错，随时随地的 man 一下，是很不错的举动！好了，简单的语法守则为：

__[root@www ~]# /sbin/shutdown [-t 秒] [-arkhncfF] 时间 [警告信息] __
__选项与参数： __
__-t sec ： -t 后面加秒数，亦即『过几秒后关机』的意思 __
__-k     ： 不要真的关机，只是发送警告信息出去！ __
__-r     ： 在将系统的服务停掉之后就重新启动(常用) __
__-h     ： 将系统的服务停掉后，立即关机。 (常用) __
__-n     ： 不经过 init 程序，直接以 shutdown 的功能来关机 __
__-f     ： 关机并启动之后，强制略过 fsck 的磁盘检查 __
__-F     ： 系统重新启动之后，强制进行 fsck 的磁盘检查 __
__-c     ： 取消已经在进行的 shutdown 命令内容。 __
__时间   ： 这是一定要加入的参数！指定系统关机的时间！时间的范例底下会说明。__ 
范例： 
[root@www ~]# /sbin/shutdown -h 10 'I will shutdown after 10 mins' 
# 告诉大家，这部机器会在十分钟后关机！并且会显示在目前登陆者的屏幕前方！ 
# 至于参数有哪些呢？以下介绍几个吧！ 
此外，需要注意的是，时间参数请务必加入命令中，否则shutdown会自动跳到 run-level 1 (就是单人维护的登陆情况)，这样就伤脑筋了！底下提供几个时间参数的例子吧：

__[root@www ~]# shutdown -h now __
__立刻关机，其中 now 相当于时间为 0 的状态 __
__[root@www ~]# shutdown -h 20:25 __
__系统在今天的 20:25 分会关机，若在21:25才下达此命令，则隔天才关机 __
__[root@www ~]# shutdown -h +10 __
__系统再过十分钟后自动关机 __
__[root@www ~]# shutdown -r now __
__系统立刻重新启动 __
__[root@www ~]# shutdown -r +30 'The system will reboot'__  
再过三十分钟系统会重新启动，并显示后面的信息给所有在在线的使用者 
[root@www ~]# shutdown -k now 'This system will reboot'  
仅发出警告信件的参数！系统并不会关机啦！吓唬人！ 
 重新启动，关机： reboot, halt, poweroff
还有三个命令可以进行重新启动与关机的任务，那就是reboot, halt, poweroff。 其实这三个命令呼叫的函式库都差不多，所以当你使用『man reboot』时，会同时出现三个命令的用法给你看呢。 其实鸟哥通常都只有记shutdown与reboot这两个命令啦！不过使用poweroff这个命令却比较简单就是了！^_^ 通常鸟哥在重新启动时，都会下达如下的命令喔：

[root@www ~]# sync; sync; sync; reboot 
既然这些命令都能够关机或重新启动，那他有没有什么差异啊？基本上，在默认的情况下， 这几个命令都会完成一样的工作！(因为halt会先呼叫shutdown，而shutdown最后会呼叫halt！)。 不过，shutdown可以依据目前已启动的服务来逐次关闭各服务后才关机；至于halt却能够在不理会目前系统状况下， 进行硬件关机的特殊功能！你可以在你的主机上面使用root进行底下两个命令来关机，比较看看差异在哪里喔！

[root@www ~]# shutdown -h now 
[root@www ~]# poweroff -f 
更多halt与poweroff的选项功能，请务必使用man去查询一下喔！

 切换运行等级： init
本章上头有谈到过关于run level的问题。之前谈到的是系统运行的模式，分为纯文本(run level 3)及图形接口模式(run level 5)。除了这两种模式外，有没有其他模式呢？其实Linux共有七种运行等级， 七种等级的意义我们在后面会再谈到。本章你只要知道底下四种运行等级就好了：

__run level 0：关机__
__run level 3：纯文本模式__
__run level 5：含有图形接口模式__
__run level 6：重新启动__
那如何切换各模式呢？可以使用init这个命令来处理喔！也就是说，如果你想要关机的话， 除了上述的shutdown -h now以及poweroff之外，你也可以使用如下的命令来关机：

[__root@www ~]# init 0__ 
