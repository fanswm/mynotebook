Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-01T12:54:38+08:00

====== me ======
创建日期 星期六 01 二月 2020

######################### Arch root history:
## 挂载 安装 iso 后的操作

# 第一步，先连网：
wifi-menu
# 连接你家的wifi，输入密码

# 接下来：
timedatectl set-ntp true		# 同步时间 
mkfs.ext4 [[/dev/sdb10]]		# 我把根目录安装在了这里，你的可能不一样
swapon [[/dev/sdb14]]		# 这是我的已经建立成功的swap分区，如果你没有，可以执行 mkswap /dev/sdXN
mount /dev/sdb10 [[/mnt]]	# 把我的目标根分区，挂载到 /mnt
vim [[/etc/pacman.d/mirrorlist]]	# 把国内源移动到最上面
pacstrap /mnt base base-devel	# 安装基本系统
mkfs.ext4 [[/dev/sdb11]]			# 这是我的家目录，你的可能不一样。
mount /dev/sdb11 [[/mnt/home]]	# 挂载我的家目录
genfstab -U /mnt >> [[/mnt/etc/fstab]]	# 生成 [[/etc/fstab]] 文件，非常重要的一步，生成之后，最好检查一下，看看对不对。结合 sudo blkid 的结果。配置分区表
vim /mnt/etc/fstab
blkid

# 进入目标系统
arch-chroot [[/mnt]]

####################end by Arch root.


## 进入 chroot 系统后：
ln -sf /usr/share/zoneinfo/Asia/Shanghai [[/etc/localtime]]	# locale time
hwclock --systohc

alias ins='pacman -S'

ins vim
vim /etc/locale.gen 
locale-gen 

vim [[/etc/locale.conf]] 	# LANG=en_US-UTF-8
vim /etc/hostname
passwd

ins intel-ucode		# 只有 Intel 的CPU才安装这一项。
ins os-prober 		# 安装引导。 如果你硬盘上还有别的系统，需要安装 os-prober。如果你的系统在别的硬盘单独引导，则不需要。

ins grub
fdisk -l
grub-install --target=i386-pc [[/dev/sdb]]		# 你想把 grub 安装在哪儿：我的是/dev/sdb
grub-mkconfig -o [[/boot/grub/grub.cfg]]

cd [[/boot]]		# 检查一下 grub 安装的是否对。搜索关键字：menuentry.
ls
cd /
vim rootArch.txt	# 标志这是我的 Arch 的根分区
vim /boot/grub/grub.cfg 

# 检查一下/boot目录下是否有initramfs-linux-fallback.img initramfs-linux.img intel-ucode.img vmlinuz-linux这几个文件，如果没有，重新需要重新部署linux内核:
ins linux		# 检查之后，我发现我的/boot 目录下没有什么，fallback等文件。所以安装一下这个，并再次生成 grub.cfg
grub-mkconfig -o [[/boot/grub/grub.cfg]]

useradd -m -g users -G wheel -s /bin/bash myname	# 增加一个叫 myname 的用户
groupadd myname
vim /etc/group
vim /etc/passwd
passwd myname

# 编辑/etc/sudoers文件，找到取消下面的注释。sudoers可能不可读，用chmod改下权限。把 “%wheel ALL=(ALL) ALL” 这一行取消掉注释。
ls -la [[/etc/sudoers]]		# 为 ‘myname' 这个用户增加 sudo 权限
chmod u+w /etc/sudoers
vim /etc/sudoers
chmod u-w [[/etc/sudoers]]

# 连网所用（无线网络）
ins wifi-menu
ins dialog wpa_supplicant netctl wireless_tools
ins dhcpcd

# 安装 git:
ins git
su myname
ins xorg-server i3-gaps sddm  # 安装图开环境
systemctl enable sddm
ins xorg-xinit
###
#复制 /etc/X11/xinit/xinitrc 到～/.xinitrc。注释掉文件后面的最后的以下几行：
	twm &
	xclock -geometry 50x50-1+1 &
	xterm -geometry 80x50+494+51 &
	xterm -geometry 80x20+494-0 &
	exec xterm -geometry 80x66+0+0 -name login

# 然后添加i3启动命令：
exec i3
# 原文链接：https://blog.csdn.net/qq_33215865/article/details/90288997
####

# 如果想要登陆tty之后自动进入桌面。使用Bash, 编辑 ~/.bash_profile。如果使用 zsh，则编辑 ~/.zprofile。文件不存在则新建。加入一下内容，自动运行startx。

	if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
	  exec startx
	fi

# 此时，你登陆tty之后，会自动进入桌面系统。
#第一次启动i3之后，根据提示进入系统，并自动在~/.config/i3下生成config文件。这个就是i3的配置文件。

ins terminator		# 安装一个终端  
#    bindsym $mod+Return exec terminator		将ctrl+Return与terminator绑定
ins wqy-microhei		# 安装图标字体

ins feh # feh是一个图片查看器，也可以用来设置桌面壁纸
# 在i3的config最后添加： exec feh --randomize --bg-fill [[~/picture]]     #  picture文件夹存放你的壁纸文件，存在多张时，feh会随机进行播放。

ins compton  # 在i3的config最后添加：###   exec compton -b     ####

#########################################重启系统


### 连网成功：
ins dhcpcd
ins wpa_supplicant 
ins ppp
wifi-menu 
ip a
ping baidu.com
vim /etc/resolv.conf # 8.8.8.8
pacman -Syyu
systemctl enable netctl-auto@wlp3s0.service

## 连网结束。

#################### 安装polybar-git  #  # polybar是一个可以定制化的状态栏。我们可以从AUR中找到它。
yay -S polybar-git
su root
yay -S polybar-git
sudo yay -S polybar-git
yay -S polybar-git
####################  在i3的config中添加自动启动：###      exec . [[~/.config/polybar/launch.sh]]      ####



###################
ins fcitx-im fcitx-configtool
pacman -Qi fcitx		#查询 fcitx 安装信息

ins man

pacman -Ss fcitx		# 查询软件库中是否有这个
ins fcitx-libpinyin		# 中文 输入法
ins fcitx

vim .bashrc 
####    在.bashrc添加以下：

	export LANG=zh_CN.UTF-8
	export LC_ALL=zh_CN.UTF-8
	export GTK_IM_MODULE="fcitx"
	export QT_IM_MODULE="fcitx"
	export XMODIFIERS="@im=fcitx"
####    在.bashrc添加以上。

### 在i3的config添加自动启动： ####          exec fcitx        ####

ins rofi    #    rofi是一个快捷的程序启动器。
vim .config/i3/config      		#####       在i3的config替换$mod+d：     bindsym $mod+d exec rofi -show drun         #  此时可以使用$mod+d唤出rofi。


ins fcitx-gtk3
ins ttf-font-awesome

vim .config/i3/config 
vim .config/i3/config 
cd [[/usr/share/doc/polybar/]]



####   去除i3的标题栏   ##  i3的标题栏还是有点难看的。在config文件中加入以下：
	new_window none
	new_float normal
	hide_edge_borders both
############  在config文件中加入以上。

install -Dm644 /usr/share/doc/polybar/config $HOME/.config/polybar/config
cd ~/.config/polybar/
vim launch.sh
./launch.sh
chmod u+x ./launch.sh 
./launch.sh 
vim ./i3/config 
vim ./polybar/config 
polybar -m
vim ./polybar/config 
echo ${env:MONITOR:HDMI-1}
polybar -m

ins tldr
tldr --update
tldr yay

yay -S timeshift
###################

__############  安装的过程简化版本：__
c
exit
c
alias ins='pacman -S'
alias c='clear'
c
ins vim intel-ucode os-prober grub git xorg-server i3status i3-gaps sddm xorg-xinit terminator wqy-microbhei feh compton wifi-menu netctl iw
ins vim intel-ucode os-prober grub git xorg-server i3status i3-gaps sddm xorg-xinit terminator wqy-microhei feh compton netctl wpa_supplicant dialog iw
vim /etc/locale.gen 
locale-gen 
vim /etc/locale.conf
vim /etc/locale.conf #LANG=en_US-UTF-8
q
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --syctohc
hwclock --systohc
local-gen
locale-gen 
vim /etc/hostname
vim /etc/hosts
ip a
grub-install --target=i386-pc /dev/sdb
grub-mkconfig -o /boot/grub/grub.cfg
ls /boot
cd /
ls
vim rootArch.txt
useradd -m -g users -G wheel -s /bin/bash fanswm
groupadd fanswm
vim /etc/passwd
vim /etc/group
passwd
passwd fanswm
chmod u+w /etc/sudoers
vim /etc/sudoers
chmod u-w /etc/sudoers
systemctl enable sddm
ins chromium    # i3的config添加####：      bindsym $mod+c exec chromium        ######

su fanswm
fdisk -l
cd /mnt
ls
cd
mount /dev/sdb17 /mnt
cd /mmt
cd /mnt
ls
cd fanswm/
ls
la
ls -la
cd arch/
ls
clear
ls
su fanswm
ls
cp ./picture/* /home/fanswm/picture/
cd /home/fanswm/picture/
ls
ls -la
ins i3status
exit
clear
cd /etc/netctl/
ip link
ip link set dev wlp3s0 up
wifi-menu
ls
lspci -v | grep 819
dmesg | grep firmware
lsmod | grep 819
lsmod
lsmod | less
lsmod | grep 819
clear
ls
rm ./wlp3s0-connect_wifi 
ls
wifi-menu -o
wifi-menu -o
wifi-menu -o
locale-gen --purge
locale-gen
c
clear
exit
umount /mnt
ls
mount /dev/sdb17 /mnt
ls
cd /mnt
ls
cd fanswm/
ls
cd arch/
ls
ls -la
pacman -Qi i3status
la
ls -la
cp ./i3_config /home/fanswm/
rm -rf ./picture
ls
clear
ls
ls -la
vim .bashrc 
cp -a ./.bashrc /home/fanswm/
cp -a ./.bash_profile /home/fanswm/
exit
wifi-menu 
ip a
cd
cd -
la
ls -la
vim /etc/profile
cp .bashrc ~/
source ~/.bashrc 
la
source /etc/profile
wifi-menu 
exit
vim /etc/locale.conf 
c
i3status 
reboot
exit
c
ls
modprobe wl
cd /etc/modules-load.d/
ls
vim /boot/grub/grub.cfg 
modprobe lib80211
modprobe wl
modprobe b43
lsmod | grep 819
lsmod | grep bs4
lsmod | grep b43
modprobe wl
lspci -v | grep 819
cd /etc/modprobe.d/
ls
cd /etc/udev/rules.d/
ls
la
sudo -i
exit
c
clear
echo rtl8192se >> /etc/modules
cat /etc/modules
reboot
cd /etc/netctl/
ls
rm ./wlp3s0-connect_wifi 
ls
wifi-menu 
ip a
rmmod b43
modprobe b43
lsmod | grep b43
lsmod | grep wl
reboot
c
exit
ping baidu.com
c
ins broadcom-wl
lspci  -v | grep 819
lsmod | grep wl
exit
cd /etc/netctl/
ls
rm ./wlp3s0-connect_wifi 
wifi-menu 
ip a
rmmod b43
lsmod 
lsmod | grep b43
lsmod | grep ssb
rmmod ssb
modprobe wl
shutdown -h now
c
wifi-menu 
ip a
ip link set wlp3s0 up
wifi-menu 
journalctl -xe
rmmod b43
cd /etc/netctl/
ls
rm ./wlp3s0-connect_wifi 
ls
wifi-menu 
modprobe wl
lsmod | grep wl
reboot
c
i
exit
exit
c
ins dhcpcd
ins wpa_supplicant 
c
ins ppp
exit
c
passwd fanswm
exit
c
cd /etc/netctl/
ls
rm ./wlp3s0-connect_wifi 
wifi-menu 
ip a
ping baidu.com
ip a
ping baidu.com
clear
c
ip a
ping 192.168.31.1
c
ping 127.0.0.1
cleare
c
ping 8.8.8.8
c
vim /etc/resolv.conf 
pacman -Syyu
systemctl enable net-auto@wlp3s0.service
systemctl start net-auto@wlp3s0.service
systemctl enable netctl-auto@wlp3s0.service
cd
ls
exit
ls
history 
history >> /home/fanswm/root_his4.txt
__# 简化版本结束__


__######################### 连网（以下没有成功）：__
cd /etc/netctl/examples/
cp ./wireless-wpa ../
systemctl enable netctl-auto@wlp3s0
systemctl start netctl-auto@wlp3s0
cd /etc/netctl/
ip link set wlp3s0 up
ip link show wlp3s0

vim /etc/resolv.conf 

ip addr add 192.168.31.118/24 broadcast 192.168.31.255 dev wlp3s0
ip default-gateway 192.168.31.1
ip route show

ip --help
ip route add 192.168.31.118 via 192.168.31.1 dev wlp3s0
ip route show
ip route del 192.168.31.118 via 192.168.31.1 dev wlp3s0
ip route add default via 192.168.31.1 dev wlp3s0

cd /etc/systemd/network
systemctl enable netctl-auto@wlp3s0
systemctl --help
systemctl enable systemd-networkd

vim /etc/systemd/network/wlp3s0.network
systemctl restart systemd-networkd
systemctl restart netctl-auto@wlp3s0
systemctl stop netctl-auto@wlp3s0
systemctl disable netctl-auto@wlp3s0

wifi-menu 
systemctl disable systemd-networkd
systemctl start netctl-auto@wlp3s0.service
dhcpcd

wpa_supplicant -B -i wlp3s0 -c <(wpa_passphrase connect_wifi mywifipasswd)

ip addr add 192.168.31.118/24 dev wlp3s0
ip route add default via 192.168.31.1
ip addr del 192.168.31.118/24 dev wlp3s0
ip route show
ip link set dev wlp3s0 up

wpa_supplicant -B -i wlp3s0 -c <(wpa_passphrase connect_wifi mywifipasswd)
ip addr add 192.168.31.118/24 broadcast 192.168.31.255 dev wlp3s0
ip route add default via 192.168.31.1
ip link show wlp3s0
systemctl restart netctl-auto@wlp3s0.service
ip link show wlp3s0

__#######################以上联网操作最终没有成功__
