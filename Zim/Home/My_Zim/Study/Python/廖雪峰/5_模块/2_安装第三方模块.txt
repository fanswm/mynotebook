Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-12-26T14:23:43+08:00

====== 2 安装第三方模块 ======
创建日期 星期四 26 十二月 2019

在Python中，__安装第三方模块，是通过包管理工具pip完成的。__

如果你正在使用Mac或Linux，安装pip本身这个步骤就可以跳过了。

__如果你正在使用Windows，请参考安装Python一节的内容，确保安装时勾选了pip和Add python.exe to Path。__

在命令提示符窗口下尝试运行pip，如果Windows提示未找到命令，可以重新运行安装程序添加pip。

注意：Mac或Linux上有可能并存__Python 3.x和Python 2.x，因此对应的pip命令是pip3。__

例如，我们要安装一个第三方库——Python Imaging Library，这是Python下非常强大的处理图像的工具库。不过，PIL目前只支持到Python 2.7，并且有年头没有更新了，__因此，基于PIL的Pillow项目开发非常活跃，并且支持最新的Python 3。__

一般来说，__第三方库都会在Python官方的pypi.python.org网站注册__，要安装一个第三方库，必须先知道该库的名称，__可以在官网或者pypi上搜索__，比如Pillow的名称叫Pillow，因此，安装Pillow的命令就是：

pip install Pillow
耐心等待下载并安装后，就可以使用Pillow了。

且慢

安装常用模块
在使用Python时，我们经常需要用到很多第三方库，例如，__上面提到的Pillow，以及MySQL驱动程序，Web框架Flask，科学计算Numpy等__。用pip一个一个安装费时费力，还需要考虑兼容性。我们推荐直接使用Anaconda，这是一个基于Python的数据处理和科学计算平台，它已经内置了许多非常有用的第三方库，我们装上Anaconda，就相当于把数十个第三方模块自动安装好了，非常简单易用。

可以从Anaconda官网下载GUI安装包，安装包有500~600M，所以需要耐心等待下载。网速慢的同学请移步国内镜像。下载后直接安装，__Anaconda会把系统Path中的python指向自己自带的Python__，并且__，Anaconda安装的第三方模块会安装在Anaconda自己的路径下__，不影响系统已安装的Python目录。


可以尝试直接import numpy等已安装的第三方模块。

__模块搜索路径__
当我们试图加载一个模块时，Python会在指定的路径下搜索对应的.py文件，如果找不到，就会报错：

>>> import mymodule
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named mymodule
__默认情况下，Python解释器会搜索当前目录、所有已安装的内置模块和第三方模块，搜索路径存放在sys模块的path变量中：__

__>>> import sys__
__>>> sys.path__
['', '/Library/Frameworks/Python.framework/Versions/3.6/lib/python36.zip', '/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6', ..., '/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages']
如果我们__要添加自己的搜索目录，有两种方法：__

__一是直接修改sys.path，添加要搜索的目录：__

__>>> import sys__
__>>> sys.path.append('/Users/michael/my_py_scripts')__
__这种方法是在运行时修改，运行结束后失效。__

__第二种方法是设置环境变量PYTHONPATH，该环境变量的内容会被自动添加到模块搜索路径中。设置方式与设置Path环境变量类似。注意只需要添加你自己的搜索路径，Python自己本身的搜索路径不受影响。__

读后有收获可以支付宝请作者喝咖啡，读后有疑问
