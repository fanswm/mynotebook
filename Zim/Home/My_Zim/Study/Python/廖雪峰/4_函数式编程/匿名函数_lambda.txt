Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-01-29T18:06:15+08:00

====== 匿名函数 lambda ======
Created Monday 29 January 2018

当我们在传入函数时，有些时候，不需要显式地定义函数，直接传入匿名函数更方便。

在Python中，对匿名函数提供了有限支持。还是以map()函数为例，计算f(x)=x2时，除了定义一个f(x)的函数外，还可以直接传入匿名函数：

>>> list(map(lambda x: x * x, [1, 2, 3, 4, 5, 6, 7, 8, 9]))
[1, 4, 9, 16, 25, 36, 49, 64, 81]
通过对比可以看出，匿名函数__lambda x: x * x实际上就是：__

__def f(x):__
	__return x * x__
关__键字lambda表示匿名函数，冒号前面的x表示函数参数__。

匿名函数__有个限制，就是只能有一个表达式，不用写return，返回值就是该表达式的结果__。

用匿名函数__有个好处，因为函数没有名字，__
	__不必担心函数名冲突__。此外，__匿名函数也是一个函数对象，__
	__也可以把匿名函数赋值给一个变量，再利用变量来调用该函数__：

>>> f = lambda x: x * x
>>> f
<function <lambda> at 0x101c6ef28>
>>> f(5)
25
同样，__也可以把匿名函数作为返回值返回__，比如：

def build(x, y):
	__return lambda: x * x + y * y__
	
	
imrdr:
a = 9
b = (a//4+1)*4 if a%4 > 0 else a
print(b)
12

