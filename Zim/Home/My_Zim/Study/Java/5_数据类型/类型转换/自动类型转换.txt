Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-03-05T21:24:17+08:00

====== 自动类型转换 ======
Created Monday 05 March 2018

整型、实型（常量）、字符型数据可以混合运算。运算中，__不同类型的数据先转化为同一类型__，然后进行运算。

__转换从低级到高级。__

低  ------------------------------------>  高

byte,short,char—> int —> long—> float —> double 

__数据类型转换必须满足如下规则：__

	1. 不能对boolean类型进行类型转换。

	2. 不能把对象类型转换成不相关类的对象。

	3. 在把容量大的类型转换为容量小的类型时必须使用强制类型转换。

	4. 转换过程中可能导致溢出或损失精度，例如：

    int i =128;   
    byte b = (byte)i;

    因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。

	5. __浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入__，例如：

    (int)23.7 == 23;        
    (int)-45.89f == -45

__自动类型转换__

__必须满足转换前的数据类型的位数要低于转换后的数据类型__，例如: short数据类型的位数为16位，就可以自动转换位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。 

问题：
short a = 1;
short b = 2;

那么 a+b 是什么类型？

答：在java的世界里，如果比int类型小的类型做运算，java在编译的时候就会将它们统一强转成int类型。当是比int类型大的类型做运算，就会自动转换成它们中最大类型那个。
