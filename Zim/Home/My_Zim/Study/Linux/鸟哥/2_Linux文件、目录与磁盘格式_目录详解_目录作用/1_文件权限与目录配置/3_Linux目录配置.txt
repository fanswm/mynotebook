Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-12-11T16:36:52+08:00

====== 3 Linux目录配置 ======
Created Monday 11 December 2017

Linux目录配置
在了解了每个文件的相关种类与属性，以及了解了如何更改文件属性/权限的相关信息后，再来要了解的就是， 为什么每套Linux distributions他们的配置文件啊、执行文件啊、每个目录内放置的咚咚啊，其实都差不多？ 原来是有一套标准依据的哩！我们底下就来瞧一瞧。


__Linux目录配置的依据--FHS__
因为利用Linux来开发产品或distributions的社群/公司与个人实在太多了， 如果每个人都用自己的想法来配置文件放置的目录，那么将可能造成很多管理上的困扰。 你能想象，你进入一个企业之后，所接触到的Linux目录配置方法竟然跟你以前学的完全不同吗？ 很难想象吧～所以，后来就有所谓的Filesystem Hierarchy Standard (FHS)标准的出炉了！

根据FHS(http://www.pathname.com/fhs/)%E7%9A%84%E5%AE%98%E6%96%B9%E6%96%87%E4%BB%B6%E6%8C%87%E5%87%BA， 他们的主要目的是希望让使用者可以了解到已安装软件通常放置于那个目录下， 所以他们希望独立的软件开发商、操作系统制作者、以及想要维护系统的用户，都能够遵循FHS的标准。 也就是说，FHS的重点在于规范每个特定的目录下应该要放置什么样子的数据而已。 这样做好处非常多，因为Linux操作系统就能够在既有的面貌下(目录架构不变)发展出开发者想要的独特风格。

事实上，FHS是根据过去的经验一直再持续的改版的，FHS依据文件系统使用的频繁与否与是否允许使用者随意更动， 而将目录定义成为四种交互作用的形态，用表格来说有点像底下这样：

　			__可分享的(shareable)		不可分享的(unshareable)__
__不变的(static)		/usr (软件放置处)		/etc (配置文件)__
__　			/opt (第三方协力软件)		/boot (开机与核心档)__
__可变动的(variable)	/var/mail (使用者邮件信箱)	/var/run (程序相关)__
__　			/var/spool/news (新闻组)	/var/lock (程序相关)__


可分享的：可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据， 是能够分享给网络上其他主机挂载用的目录；

不可分享的：自己机器上面运作的装置文件或者是与程序有关的socket文件等， 由于仅与自身机器有关，所以当然就不适合分享给其他主机了。

不变的：有些数据是不会经常变动的，跟随着distribution而不变动。 例如函式库、文件说明文件、系统管理员所管理的主机服务配置文件等等；

可变动的：经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等。

事实上，FHS针对目录树架构仅定义出三层目录底下应该放置什么数据而已，分别是底下这三个目录的定义：

__/ (root, 根目录)：与开机系统有关；__
__/usr (unix software resource)：与软件安装/执行有关；__
__/var (variable)：与系统运作过程有关。__
为什么要定义出这三层目录呢？其实是有意义的喔！每层目录底下所应该要放置的目录也都又特定的规定喔！ 由于我们尚未介绍完整的Linux系统，所以底下的介绍你可能会看不懂！没关系，先有个概念即可， 等到妳将基础篇全部看完后，就重头将基础篇再看一遍！到时候你就会豁然开朗啦！^_^

Tips:
这个 root 在 Linux 里面的意义真的很多很多～多到让人搞不懂那是啥玩意儿。 如果以『账号』的角度来看，所谓的 root 指的是『系统管理员！』的身份， 如果以『目录』的角度来看，所谓的 root 意即指的是根目录，就是 / 啦～ 要特别留意喔！	鸟哥的图示
__根目录 (/) 的意义与内容：__
根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的， 同时根目录也与开机/还原/系统修复等动作有关。 由于系统开机时需要特定的开机软件、核心文件、开机所需程序、 函式库等等文件数据，若系统出现错误时，根目录也必须要包含有能够修复文件系统的程序才行。 因为根目录是这么的重要，所以在FHS的要求方面，他希望根目录不要放在非常大的分割槽内， 因为越大的分割槽妳会放入越多的数据，如此一来根目录所在分割槽就可能会有较多发生错误的机会。

__因此FHS标准建议：根目录(/)所在分割槽应该越小越好__， 且应用程序所安装的软件最好不要与根目录放在同一个分割槽内，保持根目录越小越好。 如此不但效能较佳，根目录所在的文件系统也较不容易发生问题。

有鉴于上述的说明，因此FHS定义出根目录(/)底下应该要有底下这些次目录的存在才好：

目录	应放置文件内容
__/bin__	系统有很多放置执行文件的目录，但/bin比较特殊。__因为/bin放置的是在单人维护模式下还能够被操作的指令__。 在/bin底下的指令可以被root与一般账号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。

__/boot__	这个目录主要在放置__开机会使用到的文件__，包括Linux核心文件以及开机选单与开机所需配置文件等等。 Linux kernel常用的档名为：vmlinuz，如果使用的是grub这个开机管理程序， 则还会存在/boot/grub/这个目录喔！

__/dev__	在Linux系统上，任何装置与接口设备都是以文件的型态存在于这个目录当中的。 你只要透过存取这个目录底下的某个文件，就等于存取某个装置啰～ 比要重要的文件有__/dev/null, /dev/zero, /dev/tty, /dev/lp*, /dev/hd*, /dev/sd*等等__

__/etc__	__系统主要的配置文件__几乎都放置在这个目录内，例如人员的账号密码文件、 各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有root有权力修改。FHS建议不要放置可执行文件(binary)在这个目录中喔。比较重要的文件有： /etc/inittab, /etc/init.d/, /etc/modprobe.conf, /etc/X11/, /etc/fstab, /etc/sysconfig/ 等等。另外，其下重要的目录有：
__/etc/init.d/__：所有服务的预设启动 script 都是放在这里的，例如要启动或者关闭 iptables 的话：『 /etc/init.d/iptables start』、『/etc/init.d/iptables stop』
/etc/xinetd.d/：这就是所谓的super daemon管理的各项服务的配置文件目录。
/etc/X11/：与 X Window 有关的各种配置文件都在这里，尤其是 xorg.conf 这个 X Server 的配置文件。

__/home__	这是系统默认的用户家目录(home directory)。在你新增一个一般使用者账号时， 默认的用户家目录都会规范到这里来。比较重要的是，家目录有两种代号喔：
__~：代表目前这个用户的家目录，而 __
__~dmtsai ：则代表 dmtsai 的家目录！__

__/lib__	系统的函式库非常的多，而__/lib放置的则是在开机时会用到的函式库__， __以及在/bin或/sbin底下的指令会呼叫的函式库而已__。 什么是函式库呢？妳可以将他想成是『外挂』，某些指令必须要有这些『外挂』才能够顺利完成程序的执行之意。 __尤其重要的是/lib/modules/这个目录__， 因为该目录会放置核心相关的模块(驱动程序)喔！

__/media__	media是『媒体』的英文，顾名思义，这个/media底下放置的就是__可移除的装置__啦！ 包括软盘、光盘、DVD等等装置都暂时挂载于此。常见的档名有：/media/floppy, [[/media/cdrom等等。]]

__/mnt__	如果妳想要暂时__挂载某些额外的装置__，一般建议妳可以放置到这个目录中。 在古早时候，这个目录的用途与/media相同啦！只是有了/media之后，这个目录就用来暂时挂载用了。

__/opt__	这个是给__第三方协力软件放置的目录__。什么是第三方协力软件啊？ 举例来说，KDE这个桌面管理系统是一个独立的计划，不过他可以安装到Linux系统中，因此KDE的软件就建议放置到此目录下了。 另外，如果妳想要__自行安装额外的软件__(非原本的distribution提供的)，那么也能够将你的软件安装到这里来。 不过，以前的Linux系统中，__我们还是习惯放置在/usr/local目录下呢__！

__/root__	__系统管理员(root)的家目录__。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时， 该目录就能够拥有root的家目录，所以我们会希望root的家目录与根目录放置在同一个分割槽中。

__/sbin__	Linux有非常多指令是用来设定系统环境的，__这些指令只有root才能够利用来『设定』系统__，其他用户最多只能用来『查询』而已。 放在/sbin底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。 至于__某些服务器软件程序，一般则放置到/usr/sbin/当中__。至于本机__自行安装的软件所产生的系统执行文件(system binary)， 则放置到/usr/local/sbin/__当中了。常见的指令包括：fdisk, fsck, ifconfig, init, mkfs等等。

__/srv__	srv可以视为__『service』的缩写__，是一些网络服务启动之后，__这些服务所需要取用的数据目录__。 常见的服务例如WWW, FTP等等。举例来说，WWW服务器需要的网页数据就可以放置在/srv/www/里面。

__/tmp__	这是让一般使用者或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够存取的，所以你需要定期的清理一下。当然，重要数据不可放置在此目录啊！ 因为FHS甚至建议在开机时，应该要将/tmp下的数据都删除唷！

事实上FHS针对根目录所定义的标准就仅有上面的咚咚，不过我们的Linux底下还有许多目录你也需要了解一下的。 底下是几个在Linux当中也是非常重要的目录喔：

目录	应放置文件内容
__/lost+found__	这个目录是使用标准的ext2/ext3文件系统格式才会产生的一个目录，目的在于当__文件系统发生错误时__， 将一些遗失的片段放置到这个目录下。这个目录通常会在分割槽的最顶层存在， 例如你加装一颗硬盘于/disk中，那在这个系统下就会自动产生一个这样的目录『/disk/lost+found』

__/proc__	这个目录本身是一个『__虚拟文件系统(virtual filesystem__)』喔！__他放置的数据都是在内存当中__， 例如系统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当中， 所以本身__不占任何硬盘空间__啊！比较重要的文件例如：__/proc/cpuinfo, /proc/dma, /proc/interrupts, /proc/ioports, /proc/net/*__ 等等。

__/sys__	这个目录其实跟/proc非常类似，也是一个__虚拟的文件系统__，主要也是__记录与核心相关的信息__。 包括目前已加载的核心模块与核心侦测到的硬件装置信息等等。__这个目录同样不占硬盘容量喔！__

除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会被挂载， 其他分割槽则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录下与开机过程有关的目录， 就不能够与根目录放到不同的分割槽去！那哪些目录不可与根目录分开呢？有底下这些：

__/etc：配置文件__
__/bin：重要执行档__
__/dev：所需要的装置文件__
__/lib：执行档所需的函式库与核心所需的模块__
__/sbin：重要的系统执行文件__
这五个目录千万不可与根目录分开在不同的分割槽！请背下来啊！ 好了，谈完了根目录，接下来我们就来谈谈/usr以及/var！先看/usr里面有些什么东西：


__/usr__ 的意义与内容：
依据FHS的基本定义，/usr里面放置的数据属于__可分享的与不可变动的(shareable, static)，__ 如果你知道如何透过网络进行分割槽的挂载(例如在服务器篇会谈到的NFS服务器)，那么/usr确实可以分享给局域网络内的其他主机来使用喔！

很多读者都会误会/usr为user的缩写，其实__usr是Unix Software Resource__的缩写， 也就是『Unix操作系统软件资源』所放置的目录，而不是用户的数据啦！这点要注意。 __FHS建议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行建立该软件自己独立的目录__。

因为是所有系统默认的软件(distribution发布者提供的软件)都会放置到/usr底下，因此__这个目录有点类似Windows 系统的『C:\Windows\ + C:\Program files\』这两个目录的综合体__，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，/usr的次目录建议有底下这些：

目录	应放置文件内容
__/usr/X11R6/__	为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且该版的第6次释出之意。
__/usr/bin/__	绝大部分的__用户可使用指令__都放在这里！请注意到他与/bin的不同之处。(是否与开机过程有关)
__/usr/include/__	c/c++等程序语言的档头(header)与包含档(include)放置处，当我们以tarball方式 (*.tar.gz 的方式安装软件)安装某些数据时，会使用到里头的许多包含档喔！

__/usr/lib/__	包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本(script)。 某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， 那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统， 那可能会有/usr/lib64/目录产生喔！

__/usr/local/__	__系统管理员在本机自行安装自己下载的软件(非distribution默认提供者)，建议安装到此目录__， 这样会比较便于管理。举例来说，你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装于/usr/local/目录下，可与原先的旧版软件有分别啦！ 你可以自行到/usr/local去看看，该目录下也是具有bin, etc, include, lib...的次目录喔！

__/usr/sbin/__	非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon)啰！

__/usr/share/__	放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据， 因为几乎都是文本文件嘛！在此目录下常见的还有这些次目录：
/usr/share/man：联机帮助文件
/usr/share/doc：软件杂项的文件说明
[[/usr/share/zoneinfo：与时区有关的时区文件]]

__/usr/src/__	一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到/usr/src/linux/目录下。

__/var__ 的意义与内容：
如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运作后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对__常态性变动的文件__，包括缓存(cache)、登录档(log file)以及某些软件运作所产生的文件， 包括程序文件(lock file, run file)，或者例如MySQL数据库的文件等等。常见的次目录有：

目录	应放置文件内容
__/var/cache/__	应用程序本身运作过程中会产生的一些暂存档；
__/var/lib/__	程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来说，__MySQL的数据库放置到/var/lib/mysql__/而rpm的数据库则放到/var/lib/rpm去！

__/var/lock/__	某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该装置时， 就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该装置只会给单一软件所使用。 举例来说，刻录机正在刻录一块光盘，你想一下，会不会有两个人同时在使用一个刻录机烧片？ 如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用啰。

__/var/log/__	__重要到不行！这是登录文件放置的目录__！里面比较重要的文件如__/var/log/messages, /var/log/wtmp__(记录登入者的信息)等。

__/var/mail/__	放置个人电子邮件信箱的目录，不过这个目录也被放置到__/var/spool/mail/__目录中！ 通常这两个目录是__互为链接文件__啦！

__/var/run/__	某些程序或者是服务启动后，会将他们的__PID放置在这个目录下__喔！ 至于PID的意义我们会在后续章节提到的。

__/var/spool/__	这个目录通常放置一些__队列数据__，所谓的『队列』就是排队等待其他程序使用的数据啦！ 这些数据被使用后通常都会被删除。举例来说，系统收到新信会放置到/var/spool/mail/中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到/var/spool/mqueue/中， 等到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到__/var/spool/cron/__目录中！

建议在你读完整个基础篇之后，可以挑战FHS官方英文文件(参考本章参考资料)，相信会让你对于Linux操作系统的目录有更深入的了解喔！


针对FHS，各家distributions的异同
由于FHS仅是定义出最上层(/)及次层(/usr, /var)的目录内容应该要放置的文件或目录数据， 因此，在其他次目录层级内，就可以随开发者自行来配置了。举例来说，CentOS的网络设定数据放在 /etc/sysconfig/network-scripts/ 目录下，但是SuSE则是将网络放置在 /etc/sysconfig/network/ 目录下，目录名称可是不同的呢！不过只要记住大致的FHS标准，差异性其实有限啦！

目录树(directory tree)
另外，在Linux底下，所有的文件与目录都是由根目录开始的！那是所有目录与文件的源头～ 然后再一个一个的分支下来，有点像是树枝状啊～因此，我们也称这种目录配置方式为：『目录树(directory tree)』 这个目录树有什么特性呢？他主要的特性有：

__目录树的启始点为根目录 (/, root)；__
每一个目录不止能使用本地端的 partition 的文件系统，也可以使用网络上的 filesystem 。举例来说， 可以利用 Network File System (NFS) 服务器挂载某特定目录等。
每一个文件在此目录树中的文件名(包含完整路径)都是独一无二的。
好，谈完了FHS的标准之后，实际来看看CentOS在根目录底下会有什么样子的数据吧！我们可以下达以下的指令来查询：

[root@www ~]# ls -l /
drwxr-xr-x   2 root root  4096 Sep  5 12:34 bin
drwxr-xr-x   4 root root  1024 Sep  4 18:06 boot
drwxr-xr-x  12 root root  4320 Sep 22 12:10 dev

上面表格中比较特殊的应该是/selinux这个目录了，这个目录的内容数据也是在内存中的信息， 同样的不会占用任何的硬盘容量。这个__/selinux__是Secure Enhance Linux(SELinux)的执行目录， 而SELinux是Linux核心的重要外挂功能之一，他可以用来作为细部权限的控管，主要针对程序(尤其是网络程序)的访问权限来限制。 关于SELinux我们会在后续的章节继续做介绍的喔！

如果我们将整个目录树以图标的方法来显示，并且将较为重要的文件数据列出来的话，那么目录树架构有点像这样：

{{./目录树架构示意图.gif}}
目录树架构示意图
图3.2.1、目录树架构示意图
鸟哥只有就各目录进行简单的解释，看看就好，详细的解释请回到刚刚说明的表格中去查阅喔！ 看完了FHS标准之后，现在回到第三章里面去看看安装前Linux规划的分割情况， 对于当初为何需要分割为这样的情况，有点想法了吗？^_^。根据FHS的定义，妳最好能够将/var独立出来， 这样对于系统的数据还有一些安全性的保护呢！因为至少/var死掉时，你的根目录还会活着嘛！ 还能够进入救援模式啊！

__绝对路径与相对路径__
除了需要特别注意的FHS目录配置外，在文件名部分我们也要特别注意喔！因为根据档名写法的不同，也可将所谓的路径(path)定义为绝对路径(absolute)与相对路径(relative)。 这两种文件名/路径的写法依据是这样的：

__绝对路径：由根目录(/)开始写起的文件名或目录名称__， 例如 /home/dmtsai/.bashrc；
__相对路径：相对于目前路径的文件名写法__。 例如 ./home/dmtsai 或 ../../home/dmtsai/ 等等。反正开头不是 / 就属于相对路径的写法
而你必须要了解，相对路径是以『你当前所在路径的相对位置』来表示的。举例来说，你目前在 /home 这个目录下， 如果想要进入 /var/log 这个目录时，可以怎么写呢？

cd /var/log   (absolute)
cd ../var/log (relative)
因为你在 /home 底下，所以要回到上一层 (../) 之后，才能继续往 /var 来移动的！ 特别注意这两个特殊的目录：

__.  ：代表当前的目录，也可以使用 ./ 来表示；__
__.. ：代表上一层目录，也可以 ../ 来代表。__
这个 . 与 .. 目录概念是很重要的，你常常会看到 cd .. 或 ./command 之类的指令下达方式， 就是代表上一层与目前所在目录的工作状态喔！很重要的吶！

例题：
如何先进入/var/spool/mail/目录，再进入到/var/spool/cron/目录内？
答：
由于/var/spool/mail与/var/spool/cron是同样在/var/spool/目录中，因此最简单的指令下达方法为：
cd /var/spool/mail
cd ../cron
如此就不需要在由根目录开始写起了。这个相对路径是非常有帮助的！尤其对于某些软件开发商来说。 一般来说，软件开发商会将数据放置到/usr/local/里面的各相对目录，妳可以参考图3.2.1的相对位置。 但如果用户想要安装到不同目录呢？就得要使用相对路径啰！^_^

例题：
网络文件常常提到类似『./run.sh』之类的数据，这个指令的意义为何？
答：
由于指令的执行需要变量(bash章节才会提到)的支持，若你的执行文件放置在本目录，并且本目录并非正规的执行文件目录(/bin, /usr/bin等为正规)，此时要执行指令就得要严格指定该执行档。『./』代表『本目录』的意思，所以『./run.sh』代表『执行本目录下， 名为run.sh的文件』啰！
CentOS 的观察
某些时刻你可能想要知道你的 distribution 使用的是那个 Linux 标准 (Linux Standard Base)， 而且我们也知道 distribution 使用的都是 Linux 的核心！那你如何观察这些基本的信息呢？ 可以使用如下的指令来观察看看啦：

 [root@www ~]# uname -r
2.6.18-128.el5 <==可以察看实际的核心版本
[root@www ~]# lsb_release -a
LSB Version:    :core-3.1-amd64:core-3.1-ia32:core-3.1-noarch:graphics-3.1-amd64:
graphics-3.1-ia32:graphics-3.1-noarch      <==LSB 的版本
Distributor ID: CentOS
Description:    CentOS release 5.3 (Final) <==distribution 的版本
Release:        5.3
Codename:       Final
