Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-11-13T11:17:23+08:00

====== jq ======
Created Tuesday 13 November 2018

jq > grep 及其它

我是 [jq](https://stedolan.github.io/jq/) 的忠实粉丝之一。当然一开始我也在它的语法里苦苦挣扎，好在我对查询语言还算有些使用心得，现在我对 jq 可以说是每天都要用。（不过从前我要么使用 grep 或者使用一个叫 [json](http://trentm.com/json/) 的工具，相比而言后者的功能就非常基础了。）

我甚至开始撰写一个 jq 的教程系列（有 2500 字并且还在增加），我还发布了一个[网页工具](https://jqterm.com/)和一个 Mac 上的应用（这个还没有发布。）

jq 允许我传入一个 JSON 并且能非常简单的将其转变为一个使用 JSON 格式的结果，这正是我想要的。下面这个例子允许我用一个命令更新我的所有 node 依赖。（为了阅读方便，我将其分成为多行。）

$ npm i $(echo $(\
    npm outdated --json | \
    jq -r 'to_entries | .[] | "\(.key)@\(.value.latest)"' \
))
上面的命令将使用 npm 的 JSON 输出格式来列出所有过期的 node 依赖，然后将下面的源 JSON 转换为：

{
    "node-jq": {
        "current": "0.7.0",
        "wanted": "0.7.0",
        "latest": "1.2.0",
        "location": "node_modules/node-jq"
    },
        "uuid": {
        "current": "3.1.0",
        "wanted": "3.2.1",
        "latest": "3.2.1",
        "location": "node_modules/uuid"
    }
}
转换结果为：

node-jq@1.2.0
uuid@3.2.1
上面的结果会被作为 npm install 的输入，你瞧，我的升级就这样全部搞定了。（当然，这里有点小题大做了。）

很荣幸提及一些其它
