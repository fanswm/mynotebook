Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-12-07T08:08:55+08:00

====== MySQL root密码忘记，原来还有更优雅的解法 ======
Created Friday 07 December 2018

MySQL root密码忘记，原来还有更优雅的解法！

原创： 陈臣

代码可左右滑动，PC端显示会不太友好，建议在移动端阅读。文章稍后会同步至http://www.cnblogs.com/ivictor。

一直以来，对于MySQL root密码的忘记，以为只有一种解法-skip-grant-tables。

问了下群里的大咖，第一反应也是skip-grant-tables。通过搜索引擎简单搜索了下，无论是百度，抑或Google，只要是用中文搜索，首页都是这种解法。可见这种解法在某种程度上已经占据了使用者的心智。下面具体来看看。

skip-grant-tables的解法

首先，关闭实例

这里，只能通过kill mysqld进程的方式。

注意：不是mysqld_safe进程，也切忌使用kill -9。

         
          
[root@slowtech mysql57]# ps -ef |grep mysqld

          
root      6220  6171  0 08:14 pts/0    00:00:00 /bin/sh bin/mysqld_safe --defaults-file=my.cnf

          
mysql      6347  6220  0 08:14 pts/0    00:00:01 /usr/local/mysql57/bin/mysqld --defaults-file=my.cnf --basedir=/usr/local/mysql57 --datadir=/usr/local/mysql57/data --plugin-dir=/usr/local/mysql57/lib/plugin --user=mysql --log-error=slowtech.err --pid-file=slowtech.pid --socket=/usr/local/mysql57/data/mysql.sock --port=3307

          
root      6418  6171  0 08:17 pts/0    00:00:00 grep --color=auto mysqld

          
          
[root@slowtech mysql57]# kill 6347

         

使用--skip-grant-tables参数，重启实例

         
          
[root@slowtech mysql57]# bin/mysqld_safe --defaults-file=my.cnf --skip-grant-tables  --skip-networking &

         

设置了该参数，则实例在启动过程中会跳过权限表的加载，这就意味着任何用户都能登录进来，并进行任何操作，相当不安全。

建议同时添加--skip-networking参数。其会让实例关闭监听端口，自然也就无法建立TCP连接，而只能通过本地socket进行连接。

MySQL8.0就是这么做的，在设置了--skip-grant-tables参数的同时会自动开启--skip-networking。

修改密码

         
          
[root@slowtech mysql57]# mysql -S /usr/local/mysql57/data/mysql.sock

          
          
mysql> update mysql.user set authentication_string=password('123456') where host='localhost' and user='root';

          
Query OK, 0 rows affected, 1 warning (0.00 sec)

          
Rows matched: 1  Changed: 0  Warnings: 1

          
          
mysql> flush privileges;

          
Query OK, 0 rows affected (0.00 sec)

         

注意： 这里的update语句针对的是MySQL 5.7，如果是5.6版本，修改的应该是password字段，而不是authentication_string。

         
          
update mysql.user set password=password('123456') where host='localhost' and user='root';

         

而在MySQL 8.0.11版本中，这种方式基本不可行，因为其已移除了PASSWORD()函数及不再支持SET PASSWORD ... = PASSWORD ('auth_string')语法。

不难发现，这种方式的可移植性实在太差，三个不同的版本，就先后经历了列名的改变，及命令的不可用。

下面，介绍另外一种更通用的做法，还是在skip-grant-tables的基础上。

与上面不同的是，其会先通过flush privileges操作触发权限表的加载，再使用alter user语句修改root用户的密码，如：

         
          
[root@slowtech mysql57]# bin/mysql -S /usr/local/mysql57/data/mysql.sock

          
          
mysql> alter user 'root'@'localhost' identified by '123';

          
ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement

          
          
mysql> flush privileges;

          
Query OK, 0 rows affected (0.00 sec)

          
          
mysql> alter user 'root'@'localhost' identified by '123';

          
Query OK, 0 rows affected (0.00 sec)

         

最后重启实例

         
          
mysql> shutdown;

          
          
[root@slowtech mysql57]# bin/mysqld_safe --defaults-file=my.cnf &

         

需要注意的是，如果在启动的过程中没有指定--skip-networking参数，无需重启实例。但在网上看到的绝大多数方案，都是没有指定该参数，但重启了实例，实在没有必要。

下面对这个方案做个总结：
如果只添加了--skip-grant-tables，修改完密码后，其实无需重启，执行flush privileges即可。
从安全角度出发，建议加上--skip-networking。但因其是静态参数，将其剔除掉需要重启实例。
加上--skip-networking，虽然可以屏蔽掉TCP连接，但对于本地其它用户，只要有socket文件的可读权限，都能无密码登录。还是存在安全隐患。
不建议通过update的方式修改密码，更通用的其实是alter user。
更优雅的解法

相对于skip-grant-tables方案，我们来看看另外一种更优雅的解法，其只会重启一次，且基本上不存在安全隐患。

首先，依旧是关闭实例

其次，创建一个sql文件

写上密码修改语句

         
          
[root@slowtech mysql57]# vim init.sql 

          
alter user 'root'@'localhost' identified by '123456';

         

最后，使用--init-file参数，启动实例

         
          
[root@slowtech mysql57]# bin/mysqld_safe --defaults-file=my.cnf --init-file=/usr/local/mysql57/init.sql &

         

实例启动成功后，密码即修改完毕~

如果mysql实例是通过服务脚本来管理的，除了创建sql文件，整个操作可简化为一步。

         
          
[root@slowtech mysql57]# service mysqld restart --init-file=/usr/local/mysql57/init.sql 

         

注意：该操作只适用于/etc/init.d/mysqld这种服务管理方式，不适用于RHEL 7新推出的systemd。

欢迎阅读"MySQL 8 新特性"的其它文章

   MySQL 8 新特性之自增主键的持久化

   MySQL 8 新特性之降序索引

   MySQL 8 新特性之持久化全局变量的修改

   MySQL 8 新特性之Invisible Indexes
http://mp.weixin.qq.com/s?__biz=MzU3ODU4MTgyOQ==&mid=2247483707&idx=1&sn=4b7658c82f2b0c85cffa7b616365a428&chksm=fd726511ca05ec07cbdf6cf3dd917aadb6d2dca38ec7e6e9b421af60f53af2b53ad2272771e5&mpshare=1&scene=1&srcid=0703x7dkxf69dGG2bOWCzGup#rd
