Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-20T22:25:24+08:00

====== 事务 ======
Created 星期四 20 二月 2020

tags: __ACID 特性__

在执行SQL语句的时候，__某些业务要求，一系列操作必须全部执行，而不能仅执行一部分。__例如，一个转账操作：

-- 从id=1的账户给id=2的账户转账100元
-- 第一步：将id=1的A账户余额减去100
	UPDATE accounts 
	SET balance = balance - 100 
	WHERE id = 1;
-- 第二步：将id=2的B账户余额加上100
	UPDATE accounts 
	SET balance = balance + 100 
	WHERE id = 2;
这两条SQL语句必须全部执行，或者，由于某些原因，如果第一条语句成功，第二条语句失败，就必须全部撤销。

这种__把多条语句作为一个整体进行操作的功能，被称为数据库事务。__数据库事务__可以确保该事务范围内的所有操作都可以全部成功或者全部失败__。如果事务失败，那么效果就和没有执行这些SQL一样，不会对数据库数据有任何改动。

可见，数据库事务具有__ACID这4个特性：__

A：Atomic，原子性，将所有SQL作为原子工作单元执行，__要么全部执行，要么全部不执行；__
C：Consistent，一致性，事务完成后，__所有数据的状态都是一致的，即A账户只要减去了100，B账户则必定加上了100；__
I：Isolation，隔离性，__如果有多个事务并发执行，每个事务作出的修改必须与其他事务隔离；__
D：Duration，持久性，即事务完成后，__对数据库数据的修改被持久化存储。__

对于单条SQL语句，数据库系统自动将其作为一个事务执行，这种事务被称为__隐式事务。__

要手动把多条SQL语句作为一个事务执行，__使用BEGIN开启一个事务，使用COMMIT提交一个事务，这种事务被称为显式事务__，例如，把上述的转账操作作为一个显式事务：

__BEGIN;__
	__UPDATE accounts SET balance = balance - 100 WHERE id = 1;__
	__UPDATE accounts SET balance = balance + 100 WHERE id = 2;__
__COMMIT;__

很显然多条SQL语句要想作为一个事务执行，就必须使用显式事务。

COMMIT是指提交事务，即试图把事务内的所有SQL所做的修改永久保存。__如果COMMIT语句执行失败了，整个事务也会失败。__

有些时候，我们希望主动让事务失败，这时，可以用__ROLLBACK回滚事务__，整个事务会失败：

BEGIN;
	UPDATE accounts SET balance = balance - 100 WHERE id = 1;
	UPDATE accounts SET balance = balance + 100 WHERE id = 2;
ROLLBACK;
数据库事务__是由数据库系统保证的__，我们只需要根据业务逻辑使用它就可以。

__隔离级别__
__对于两个并发执行的事务，如果涉及到操作同一条记录的时候，可能会发生问题__。因为并发操作会带来数据的不一致性，包括__脏读、不可重复读、幻读__等。数据库系统提供了__隔离级别__来让我们有针对性地选择事务的隔离级别，避免数据不一致的问题。

SQL标准定义了__4种隔离级别__，分别对应可能出现的数据不一致的情况：

__Isolation Level			脏读（Dirty Read）	不可重复读（Non Repeatable Read）	幻读（Phantom Read）__
__Read Uncommitted	Yes						Yes										Yes__
__Read Committed		-						Yes										Yes__
__Repeatable Read		-						-										Yes__
__Serializable			-__						-										-

我们会依次介绍4种隔离级别的数据一致性问题。
