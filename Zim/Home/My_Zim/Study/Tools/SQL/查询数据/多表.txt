Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-20T22:22:51+08:00

====== 多表 ======
Created 星期四 20 二月 2020

SELECT查询不但可以从一张表查询数据，还可以从多张表同时查询数据。__查询多张表的语法是：SELECT * FROM <表1> <表2>。__

例如，同时__从students表和classes表的“乘积”__，即查询数据，可以这么写：

-- FROM students, classes:
__SELECT * FROM students, classes;__

这种一次查询两个表的数据，__查询的结果也是一个二维表，它是students表和classes表的“乘积”__，__即students表的每一行与classes表的每一行都两两拼在一起返回。结果集的列数是students表和classes表的列数之和，行数是students表和classes表的行数之积。__

这种多表查询又称笛卡尔查询，使用笛卡尔查询时要非常小心，由于结果集是目标表的行数乘积，对两个各自有100行记录的表进行笛卡尔查询将返回1万条记录，对两个各自有1万行记录的表进行笛卡尔查询将返回1亿条记录。

你可能还注意到了，上述查询的结果集有两列id和两列name，两列id是因为其中一列是students表的id，而另一列是classes表的id，但是在结果集中，不好区分。两列name同理

要解决这个问题，我们仍然可以__利用投影查询的“设置列的别名”来给两个表各自的id和name列起别名：__

-- set alias:
__SELECT__
__    students.id sid,__
__    students.name,__
__    students.gender,__
__    students.score,__
__    classes.id cid,__
__    classes.name cname__
__FROM students, classes;__

注意，多表查询时，要使用    __表名.列名     __这样的方式来引用列和设置别名，这样就避免了结果集的列名重复问题。但是，用表名.列名这种方式列举两个表的所有列实在是很麻烦，__所以SQL还允许给表设置一个别名，让我们在投影查询中引用起来稍微简洁一点：__

-- set table alias:
SELECT
	s.id sid,
	s.name,
	s.gender,
	s.score,
	c.id cid,
	c.name cname
FROM students s, classes c;


__注意到FROM子句给表设置别名的语法是FROM <表名1> <别名1>, <表名2> <别名2>。这样我们用别名s和c分别表示students表和classes表。__

多表查询也是可以添加WHERE条件的，我们来试试：

-- set where clause:
__SELECT__
__    s.id sid,__
__    s.name,__
__    s.gender,__
__    s.score,__
__    c.id cid,__
__    c.name cname__
__FROM students s, classes c__
__WHERE s.gender = 'M' AND c.id = 1;__


这个查询的结果集每行记录都满足条件s.gender = 'M'和c.id = 1。添加WHERE条件后结果集的数量大大减少了。
小结

__使用多表查询可以获取M x N行记录；__

__多表查询的结果集可能非常巨大，要小心使用。__
