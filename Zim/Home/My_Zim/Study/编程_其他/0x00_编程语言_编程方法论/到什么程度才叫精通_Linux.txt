Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-20T23:47:02+08:00

====== 到什么程度才叫精通 Linux ======
Created 星期四 20 二月 2020

本硕机械，工作后从东汽跳槽到阿里巴巴淘宝事业群，应该还是能给你一些建议。之前写过自己入行互联网的学习经历，这里结合我这几年的职场经历谈谈基层技术员工的职业问题，包括：

1、本科/硕士学的是软件无关专业（非科班），如何找互联网公司的工作；

2、刚开始学习编程如何入门、进阶，选哪个方向比较合适；

3、程序员如何精进自己的技术能力；

4、面试如何准备；

5、大厂好还是创业公司好；

编程入门

重头戏就是算法与数据结构，这一块总结起来内容不多，不管你翻国内国外哪本讲算法与数据结构的书籍，重点内容都是这些：

数据结构：数组、链表、队列与栈、哈希表；二叉树和堆；图；

算法：排序、查找（二分、hash等）、搜索（DFS、VFS）、字符串匹配、动态规划、复杂度分析；

掌握了这些基础的数据结构和算法知识点，再学更加复杂的数据结构和算法，理解起来就非常容易了。对于工作好几年的老鸟，面试可能更看重具体的项目经验；对于校招或者毕业两年内的程序员，如果基本算法与数据结构不熟的话基本就被pass了。

我最开始接触的是C语言，C语言某种程度上就是汇编语言的直接翻译，非常有助于初学者理解程序运行机制。程序对输入数据进行处理并输出，程序的主要执行方式就是：顺序执行、条件执行和循环执行。编程过程中适当思考函数执行过程中内存堆栈的操作，函数的执行，跳转和参数的传递等，对后续知识迁移及上手新的语言大有裨益。

Linux入门

首先要清楚学Linux目的是什么？是学习Linux的如何使用还是学些Linux内核本身？装几个音乐软件聊天软件算不算会用了？一般大部分时候都是基于Linux系统来开发应用软件，刚上手时熟悉Linux的常用命令即可：

pwd、mkdir、cd、vi、tar这些文本文件及目录操作相关的；

grep、sed、awk、cat、less、sort这些提升效率相关的；

ps、kill这些系统命令；

ftp、ssh等少量远程操作相关的命令；

剩下的，用到的时候边查边记足够了也不要投入太多时间，一个星期足够，这些工具型知识点学起来是相当枯燥的，重要的是后期项目开发边用边记。对于git和shell，会用几个基本的命令，加速干活效率就行，除非是想专门搞运维或者测试。可以买本鸟哥Linux私房菜日常备用，或者上菜鸟教程搜索命令用法都是一种学习方式。

学习Linux内核不建议把太多经历放在系统环境配置及一些偏运维的知识上面，重点把进程管理与调度、内存管理、信号与中断、并发编程、同步异步、IO这些通用性知识点理解透，不管是从事嵌入式物联网开发，还是服务端后台开发，还是Android等客户端开发都毫无压力。不太建议装虚拟机玩，尽量装Linux系统或者双系统，使用体验会好很多。

对于上面提到的知识点，重要的是学懂，而不是买一本书就想着看完，最重要的是复盘，每周末把学过的点重新翻看一遍，没理解的重新敲一遍代码。算法与数据结构，操作系统与协议栈，数据库操作，这些基本的知识点都是相通的。举个例子吧，比如mysql的事务性思想可以提高编程稳定性，像git的commit命令其实就是事务性的应用。再举个项目中的例子，http内容存储中会涉及hash链表的修改，涉及到多个操作步骤，一般为mmap映射直接操作内存，光用读写锁是不够的，利用事务性可提高文件写入的健壮性，对于手淘这种生态级app，这些优化点永远不嫌少。

关于学习效率，虽然很多人提倡在白纸上敲代码，但是对于新手来说最快的学习方式是实验指导理论，比如拿到开源代码，先写个测试框架跑起来看看效果，加几个断点看看中间态，感性上理解数据执行流，比直接硬读代码舒服很多。前阵子听学弟说单片机课程老师不带板子直接在模拟器上干讲，其实效果是很差的，毕竟人脑堆栈很容易爆栈。。。

编程语言

大部分工科专业大一都会学C语言，刚上手的时候除了先把前面提到的排序、查找等基本算法写一遍之外，可以周末写写简单的小游戏如贪吃蛇、俄罗斯方块、五子棋、国际象棋等，网上源码很多，可以先看一遍理解思路自己动手敲一遍。上手之后就看自己的长远职业规划了，建议选C++/Java，Java多用于各种应用开发，C++更偏向于底层开发如网络等。当然各有难度，C++语言特性特别多，Java的话框架和库特别多，要端稳这碗饭都不容易。从业者也有直接学python入门的，Python可以搞搞数据处理，比如语音、图像、文本，但是也有数据结构及编程特性，如数组、函数调用等需要学习。

从完成企业项目的角度而言，光会计算机知识是不太够的，像数理统计跟线性代数等也要有基本概念，如服务端防ddos攻击怎么做？流量清洗怎么做？一般用蒙特卡洛采样做模拟统计实现简单的ddos防范。当然这些工程背景知识临时补也是可行的。

面试经验

1基础编程知识：难一点的可能会问哈希表或者红黑树的考察。像腾讯就非常喜欢问海量数据处理问题，其实不难，花一个星期重点突击理解就行。

2网络通信 因为是项目相关，这块面试官问的比较细，包括协议栈的分层关系，以及TCP的三次握手与四次挥手的时序问题。

适当多刷面经，面试经验就类似高考模拟考试，提前预演总是没错的。然后，第一次面试一定要找一家普通的公司练练手，回去之后要对自己的一些固定回答流程进行复盘。技术面一般会持续一到两小时左右，肯定会有答的出来的答不出来的，其实就是一个跟面试官交流的过程，少量技术点回答错误会影响薪资，同样是能拿到offer的。最后，薪资是可以谈的，如果不会谈判技巧，记住一个最基本的技巧：hr开出卖身价格后会问你是否接受，不必急于答应，可以回复先考虑一天。要知道招聘成本是很大的，能走到终面的候选人一般公司不太会轻易放弃，毕竟放弃一个终面候选人意味着前面可能十几次面试成本归零。

大厂与创业公司

如果不是小而美的创业公司如商汤科技、旷视科技这些，而是那种需要创始人卖情怀维持生存的小公司，那就没必要去。一个判断标准就是，看这家公司是否受资本青睐，即是否顺利融资。对于应届生以及年龄不到三十岁的基层技术员工而言，极力建议去大厂。其实职场经历跟学历一样，大厂经历就相当于985学校，对于学历出身不那么好的人也是一种镀金。大厂的职级在业界一般都是通用的，比如阿里P7，腾讯t3.1，海康t2-5等。关于薪水问题，很多小厂也能开高薪，但是对应的责任完全不一样，这一块各有各的体会，如人饮水，冷暖自知。

推荐入门书籍

对于非科班出身的人来说，成为程序员以后绝大部分基本都是普通的开发工程师（貌似科班的也是这个结局），除非祖坟冒青烟，否则基本P7到头了。所以刚入手当然是越简单越好，像那种导论之类的厚厚的书没必要看，英文课程其实也没必要上，对于资质平凡的学生来说理解起来费劲。跟同事交流过程中很多人觉得看英文文档理解更透彻，实话我也有这种感觉，但是看完就忘了，记不住。推荐几本零基础就可以入手的书籍：

大话数据结构

算法图解

啊哈算法

剑指offer

编程珠玑

这几本学习的过程中其实就会对自己的职业规划有个初步的概念了，后续再学哪些内容已经心里有数了。

推荐一下浙大的MOOC网课，效果还不错：https://www.icourse163.org/course/ZJU-93001
