Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-01T18:43:47+08:00

# 系统安装位置： / : /dev/sda10, /home: /dev/sda11

pacman -S screenfetch xed thunar tldr samba 

#  thunar-shares-plugin    # arch 官网： https://wiki.archlinux.org/index.php/Thunar_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

yay -S thunar-shares-plugin   # 选择git版本

##  libtool: Version mismatch error.

libtool: Version mismatch error. This is libtool 2.4.6, but the definition of this LT_INIT comes from libtool 2.4.6.42-b88ce. You should recreate aclocal.m4 with macros from libtool 2.4.6 and run autoconf again.

 

# 安装 GTK3  https://wiki.archlinux.org/index.php/GTK#Installation

ins gtk3

#解决方法：
#在工程的根目录下执行下面命令：
autoreconf --force --install 
./configure 
make && make install

#没有成功

# 解决方法很简单：运行 
autoreconf -ivf # 即可。
./configure
make

 

# 出现新的问题：  #  syntax error near unexpected token `GTK,'

# 最终没有成功。 

# 最终我只是装了一个：

ins gvfs-smb﻿​     # 参照manjaro： https://wiki.manjaro.org/index.php?title=Using_Samba_in_your_File_Manager#KDE

 

# 同步 zim between gitee and github   https://www.cnblogs.com/MikeZhang/p/rsyncExample_20160818.html

rsync -av src_dir to_dir 

# 错误：

```shell

hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint: 
hint: git submodule add <url> mynotebook
hint: 
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint: 
hint: git rm --cached mynotebook
hint: 
hint: See "git help submodule" for more information.

``` 

 

# 安装 yay:

git clone https://aur.archlinux.org/yay.git
ls
cd yay
makepkg -si

 

# arch 的软件包位置：/var/cache/pacman/pkg/

# 清理干净软件包，卸载干净：

# pacman -Rs pkg-name

ins flameshot drawing ntfs-3g 

在文件末尾添加

[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch

#导入GPG Key
sudo pacman -Syy && sudo pacman -S archlinuxcn-keyring

# 添加了中科大源后，也可以直接在添加/删除软件里搜索直接安装，现在可以安装软件了，比如 chrome 和搜狗拼音输入法

ins nutstore

# 安裝chrome:

ins google-chrome

```

(1/1) 正在安装 google-chrome [######################] 100%
==> NOTE: Custom flags should be put directly in: ~/.config/chrome-flags.conf
==> NOTE: The launcher is called: 'google-chrome-stable'

```

# 安装 timeshift

yay -S timeshift

# imrdr 操作：

sudo mount /dev/sda17 /mnt

sudo timeshift --create --comments "Arch first create" --tags D   # /dev/sda17 

sudo timeshift --list    # 查看

 

# Sublime-Text

##  pacman  （imrdr 未成功）

# Install the GPG key:

curl -O https://download.sublimetext.com/sublimehq-pub.gpg && sudo pacman-key --add sublimehq-pub.gpg && sudo pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg

 

 

# 没有成功。# acpid

# 电源管理设置位置：仅当您希望配置不受电源管理器禁止的特定事件的行为时，才需要更改/etc/systemd/logind.conf或/etc/systemd/logind.conf.d/*.conf进行更改。

sudo pacman -S acpid

sudo systemctl enable acpid

sudo systemctl start acpid

# 您正在运行的内核的完整列表：

ls -l /usr/lib/modules/5.4.15-arch1-1/kernel/drivers/acpi

# 检查硬件是否支持该模块：#  这些模块的配置文件在： /etc/modules-load.d  # 一般不需要手动增加这些配置文件。

dmesg | grep acpi﻿​

 

 

# 获取电池信息：

ins acpi acpi_call

modprobe acpi_call

acpi -i #查看 电池信息 

ins xbindkeys  # https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_T420_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%AE%89%E8%A3%85

xbindkeys -d ~/.xbindkeysrc 

# 先安装__thinfan__：  https://wiki.archlinux.org/index.php/Thinkpad_Fan_Control_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

yay -S thinfan    # imrdr 选了版本1

sudo systemctl enable thinkfan.service 

# output:
# Created symlink /etc/systemd/system/multi-user.target.wants/thinkfan.service → /usr/lib/systemd/system/thinkfan.service.
# Created symlink /etc/systemd/system/suspend.target.wants/thinkfan-wakeup.service → /usr/lib/systemd/system/thinkfan-wakeup.service.

sudo cp /usr/share/doc/thinkfan/examples/thinkfan.conf.simple   /etc/thinkfan.conf

##### ERROR:

ERROR: Module thinkpad_acpi doesn't seem to support fan_control

###############

# 出现上面错误之后，imrdr 进行了重起，然后，又出现了下面错误：

ERROR: /run/thinkfan.pid already exists. Either thinkfan is already running, or it was killed by SIGKILL. If you're sure thinkfan is not running, delete /run/thinkfan.pid manually.

# thinkpad_acpi需要配置才能让用户空间程序正确控制风扇转速。

# /etc/modprobe.d/thinkpad_acpi.conf

options thinkpad_acpi fan_control=1

 

#  thinkfan配置文件需要知道如何控制风扇转速。用以下配置替换默认的传感器配置：

# /etc/thinkfan.conf

sensor /sys/devices/virtual/thermal/thermal_zone0/temp

# systemd，请使用：

# systemctl enable thinkfan.service﻿​

 yaourt -S laptop-mode-tools # 为何不是： sudo pacman -S laptop-mode-tools. 我在Manjaro上安装的时候，显示： laptop-mode-tools 与 tlp 有冲突。删除 tlp 吗？ [y/N] 
所以，我没有装。

systemctl enable laptop-mode.service

#  下面的命令可以用来列出模块的启用配置（启用、禁用或自动）：

grep -r '^\(CONTROL\|ENABLE\)_' [[/etc/laptop-mode/conf.d​]]

``` Failed to start simple and lightweight fan control program ```

ins hdparm  # 安装硬盘管理软件包 https://wiki.archlinux.org/index.php/Hdparm
sudo hdparm -I /dev/sdb #获取有关硬盘的信息

sudo hdparm -B /dev/sda #查询当前值，请传递不带值的参数。

# 参数介绍：

-S :

# 设置驱动器的待机（停工）超时。 超时指定关闭电动机以节省功率之前在空闲（无磁盘活动）中等待多长时间。 值0禁用降速，值1到240指定5秒的倍数，值241到251指定30分钟的倍数。(imrdr 选用241)

# 可能的值在1到255之间，较低的值表示更积极的电源管理，较高的值表示更好的性能。从1到127的值允许降速旋转，而从128到254的值不允许降速旋转。值255将完全禁用该功能。

hdparm -B 127 /dev/sda​ #应用其他值，例如将APM设置为127

ins smartmontools #查询磁盘状态而无需唤醒磁盘 安装。提供smartctl

sudo smartctl -i -n standby /dev/sda

# 使用udev规则进行永久配置 

/etc/udev/rules.d/69-hdparm.rules 

ACTION=="add", SUBSYSTEM=="block", KERNEL=="sda", RUN+="/usr/bin/hdparm -B 254 -S 0 /dev/sda"﻿​ 

 

# 系统挂起/休眠后丢失了配置, 则可以使用systemd-sleep重新应用它。将脚本放入/usr/lib/systemd/system-sleep并使其可执行：

# /usr/lib/systemd/system-sleep/hdparm # imrdr 创建了一个名叫hdparm的文件 

#!/bin/sh case $1 in post)         /usr/bin/hdparm -B 254 -S 0 /dev/sda         ;; esac​  

 

 

 

# 引导后直接将驱动器置于睡眠状态:

# 创建一个systemd服务并启用它：

/etc/systemd/system/hdparm.service 

```shell

[Unit]
Description=hdparm sleep

[Service]
Type=oneshot
ExecStart=/usr/bin/hdparm -q -S 120 -y /dev/sda

[Install]
WantedBy=multi-user.target​

 

```

sudo systemctl enabled hdparm.service 

 

 # imrdr: 把sdb 硬盘置于休眠状态：

sudo hdparm -q -S 120 -y /dev/sdb 
##  输出： issuing standby command

# 使hdparm 不需要密码：

sudo chmod +w /etc/sudoers

sudo vim /etc/sudoers

# %wheel /usr/bin/hdparm

sudo -w /etc/soduers

# 参考： https://sourceforge.net/p/hdparm/discussion/461705/thread/34dd9c57/?limit=25#32be   https://sourceforge.net/projects/hdparm/  

 

 

 

ins xss-lock

# AUR home: https://aur.archlinux.org/

#  EXAMPLES #############################
* Run xlock after ten minutes of inactivity:

xset 600
xss-lock xlock +resetsaver

Without +resetsaver, xlock forces a screen saver reset during startup, thereby telling xss-lock to immediately kill xlock again.

* Dim the screen after three minutes of inactivity, lock the screen two minutes later using i3lock:

xset 180 120
xss-lock -n dim-screen.sh -- i3lock -n

NOTE:
A script is provided to use i3lock's forking mode with the --tranfer-sleep-lock option (see above).

#############################

# 休眠: resume钩子在中是必需的 /etc/mkinitcpio.conf

# 内核文档：用于系统休眠的电源管理接口​：

#   https://www.kernel.org/doc/Documentation/power/interface.txt

# 实现休眠：

# 1，创建一个交换分区或文件。

# 2，使用resume=内核参数将内核指向您的交换，该参数是通过引导加载程序配置的。

# 3，您还需要配置initramfs。

 

# 壁纸时钟：

ins komorebi

# 声音 ALSA

#  https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

ins alsa-utils
alsamixer    # MM是静音，00是有声音。

# 也可以用以下命令消除静音：

amixer sset Master unmute

lspci | grep Audio
lsmod | grep udio

speaker-test -c 2
aplay -L | grep :CARD    # 查找 -D 后面的对数是多少？


speaker-test -D default:MID -c 2    # 测试
sudo reboot

# issue:

### 没有声音

ins pulseaudio  pulseaudio-alsa

ins kmix   # KMix — KDE音量控制应用程序，支持多个平台，包括PulseAudio，可配置的系统任务栏小程序。

#  kmix: error while loading shared libraries: libKF5Solid.so.5: cannot open shared object file: No such file or directory

 

 

 

# CPU 频率：

yay -S thermald

sudo systemctl enable thermald

ins i7z cpupower

sudo systemctl enable cpupower

# 安装cpupower 的依赖 systemd-light：

yay -S systemd-light

 

# 安装过程中，遇到错误：

# ERROR: Dependency "libqrencode" not found, tried pkgconfig and cmake

# 找到解决办法： https://github.com/fukuchi/libqrencode

git clone https://github.com/fukuchi/libqrencode

cd libqrencode

cmake

sudo make install

# 出现以下显示信息：

```shell

Install the project...
-- Install configuration: ""
-- Installing: /usr/local/share/man/man1/qrencode.1
-- Installing: /usr/local/lib/pkgconfig/libqrencode.pc
-- Installing: /usr/local/include/qrencode.h
-- Installing: /usr/local/lib/libqrencode.a
-- Installing: /usr/local/bin/qrencode

``` 

sudo make clean   # 没有显示信息,是不是makefile中没有 clean 这一项？

重新安装 systemd-light

yay -S systemd-light

# 遇到以下错误：

```

Error: Could not find all required packages
meson.build:1046:8: ERROR: Dependency "libqrencode" not found, tried pkgconfig and cmake

# imrdr: libqrencode

```
# 未果。

 

# 尝试以下这样，遇到错误：
cd ~libqrencode/
makepkg -si
#  ERROR: PKGBUILD does not exist.

# 未成功。 

###### 改成AUR库安装  https://aur.archlinux.org/cgit/aur.git/?h=systemd-light ：
cd ~/app
git clone https://aur.archlinux.org/systemd-light.git/
cd system-light
makepkg -si
# 结果未成功。 

# cpupower 使用
# 查询到 CPU 的信息：
$ cpupower frequency-info
# 设置最大和最小频率。在罕见的情况下，可能有必要手动设置最大和最小频率。运行以下命令设置最大时钟频率（clock_freq 为时钟频率，单位为：GHz, MHz）：

# cpupower frequency-set -u clock_freq
# 运行以下命令设置最小时钟频率：

# cpupower frequency-set -d clock_freq
# 运行以下命令设置运行于指定频率：

# cpupower frequency-set -f clock_freq
# 注意: 仅设置某一核心，添加参数 -c core_number。The governor，频率的最大值和最小值可以在 /etc/default/cpupower 中设置。

# ###############如果需要实时监测 CPU 的频率，运行以下命令：

watch grep \"cpu MHz\" /proc/cpuinfo

 

# 升級遇到錯誤

```shell

:: 正在同步软件包数据库...
core 已经是最新版本
extra 已经是最新版本
community 已经是最新版本
multilib 已经是最新版本
archlinuxcn 已经是最新版本
:: 正在进行全面系统更新...
警告：apparmor：本地 (2.13.3-5) 比 extra 的版本更新 (2.13.3-4)
警告：filesystem：本地 (2019.10-4) 比 core 的版本更新 (2019.10-2)
警告：mkinitcpio：本地 (27-2.0) 比 core 的版本更新 (27-2)
警告：tlp：本地 (1.2.2-1.1) 比 community 的版本更新 (1.2.2-1)
警告：ttf-droid：本地 (20121017-7.2) 比 community 的版本更新 (20121017-7)
正在解析依赖关系...
正在查找软件包冲突...
错误：无法准备事务处理 (无法满足依赖关系)
:: 安装 pacman (5.2.1-4) 破坏依赖 'pacman-contrib' （pacui 需要）

```
<<<<<<< HEAD
# 安装字体：__安装总结：__
__ins awesome-termianl-fonts noto-fonts-emoji   ttf-symbola ttf-joypixels__

 

 

# cn:  https://www.archlinuxcn.org/

#  PKGBUILD (简体中文):  https://wiki.archlinux.org/index.php/PKGBUILD_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

# Arch Linux: https://wiki.archlinux.org/index.php/Arch_Linux

# Arch Linux 整体的系统管理：General recommendations (简体中文)：

#  https://wiki.archlinux.org/index.php/General_recommendations_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E7%94%A8%E6%88%B7%E7%9A%84%E6%8E%A8%E8%8D%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88

# Lenovo ThinkPad T420 (简体中文):   https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_T420_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_T420_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

 

# CPU frequency scaling (简体中文)

https://wiki.archlinux.org/index.php/CPU_frequency_scaling_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

 

# 笔记本电脑模式工具： https://wiki.archlinux.org/index.php/Laptop_Mode_Tools

# 自动启动： https://wiki.archlinux.org/index.php/Autostarting

# 笔记本电源管理：# https://wiki.archlinux.org/index.php/Power_management

# Laptop (简体中文) # https://wiki.archlinux.org/index.php/Laptop_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

# 笔记本电脑（简体中文）：#  https://wiki.archlinux.org/index.php/Laptop_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87) 

# systemd中文 手册：

http://www.jinbuguo.com/systemd/systemd.syntax.html#

https://blog.csdn.net/a624575745856085/article/details/101618439

# 开机时自动调整亮度： https://www.cnblogs.com/vanwoos/p/5475912.html

# AUR helpers (简体中文):  https://wiki.archlinux.org/index.php/AUR_helpers_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)
=======

>>>>>>> 5410e90b4ff495a8124f0f178c3be82ff7493a74
