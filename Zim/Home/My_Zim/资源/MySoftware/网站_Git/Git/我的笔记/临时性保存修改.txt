Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-01-31T15:18:31+08:00

====== 临时性保存修改 ======
Created 星期四 31 一月 2019

临时性保存修改在工作进行中时，有些东西常常会处于凌乱的状态。如果这时需要切换到不同的分支该怎么办呢？Git是不允许你这么做的，因为还有尚未保存的修改。坦率地说，你并不想将半成品提交上去，后面再来修改。这个问题的解决之道就是使用git stash命令。Stash会接收工作目录的当前状态（比如说，修改了的追踪文件与暂存区的修改等），并将其保存到未完成的修改栈中，这样后面随时可以再来修改。可以通过如下命令来暂存你的工作：$ git stash
Saved working directory and index state WIP on feature: 3fc175f fix race condition
HEAD is now at 3fc175f fix race condition
现在，工作目录就是干净的了：$ __git status__
# On branch feature
nothing to commit, working directory clean
这时就可以安全地切换分支做别的事情了。不过不必担心，暂存的提交依旧还在：$ __git stash list__
stash@{0}: WIP on feature: 3fc175f fix race condition
稍后，在回到feature分支后，你就可以取回所有暂存的变更了：$ __git stash pop__
On branch feature
Changes not staged for commit:
  (use "git add ..." to update what will be committed)

	 modified:   index.html
Dropped refs/stash@{0} (ac2321cc3a33ba712b8e50c99a99d3c20da9d6b8)
关于暂存，还有其他一些选项可用，如下所示：$ git stash save "describe it"   # give the stash a name
$ __git stash clear__                # delete a stashed commit
$ git stash save --keep-index    # stash only unstaged files
