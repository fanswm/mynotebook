Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-02-03T21:16:48+08:00

====== 如何在 Ubuntu 或 Linux Mint 启用 Chromium 硬件加速的视频解码 ======
Created 星期日 03 二月 2019

Video Decode: Hardware accelerated “，然而这个并不意味着真的可以工作。在 YouTube 打开一个高清视频并用诸如 htop 的工具查看 CPU 使用率（这是我在以上截图中用来查看 CPU 使用率的）。因为 GPU 视频解码没有真的被启用，你应该看到较高的 CPU 使用率。下面有一个部分是关于检查你是否真的在使用硬件加速的视频解码的。

文中使用的 Chromium 浏览器 Ubuntu 版启用 VA-API 的补丁在这个地址[2]可以获得

在 Ubuntu 和 Linux Mint 安装和使用带有 VA-API 支持的 Chromium 浏览器
每个人都该知道 Chromium 开发版本没有理想中那么稳定。所以你可能发现 bug，它可能会发生崩溃等情况。它现在可能正常运行，但是谁知道几次更新以后会发生什么。

还有，如果你想启用 Widevine 支持（这样你才能观看 Netflix 视频和 YouTube 付费视频），Chromium dev 分支 PPA 要求你执行一些额外步骤。 如果你想要一些功能，比如同步，也是如此（需要注册 API 密钥还要在你的系统上设置好）。执行这些任务的说明在 Chromium 开发版本的 PPA[3] 中有详细解释。

对于 Nvidia 显卡，vdpau 视频驱动程序需要更新以便显示 vaQuerySurfaceAttributes。所以 Nvidia 需要使用打过补丁的 vdpau-va-driver。值得庆幸的是，Chromium-dev PPA 提供了这个打过补丁的包。

带有 VA-API 补丁的 Chromium 也可用于其它 Linux 发行版，在第三方仓库，比如说 Arch Linux[4]（对于 Nvidia 你需要这个[5]补丁过的 libva-vdpau-driver）。如果你不使用 Ubuntu 或 Linux Mint，你得自己找那些包。

1、安装带有 VA-API 补丁的 Chromium
有一个带 VA-API 补丁的 Chromium Beta PPA，但是它缺少适用于 Ubuntu 18.04 的 vdpau-video。如果你需要，你可以使用这个 Beta PPA[6]，而不是我在下面的步骤中使用 Dev PPA[7]，不过如果你使用 Nvidia 显卡，你需要从这个 Dev PPA 中下载安装 vdpau-va-driver，并确认 Ubuntu/Linux Mint 不更新这个包（有点复杂，如果你准备根据下面步骤使用 Dev PPA 的话，不需要手动做这些）。

你可以添加 Chromium 开发分支 PPA[8]，并在 Ubuntu 或 Linux Mint（及其它基于 Ubuntu 的发行版，如 elementary，以及 Ubuntu 或 Linux Mint 的风味版，如 Xubuntu、Kubuntu、Ubuntu MATE、Linux Mint MATE 等等）上安装最新的 Chromium 浏览器开发版：

sudo add-apt-repository ppa:saiarcot895/chromium-dev
sudo apt-get update
sudo apt install chromium-browser
2、安装 VA-API 驱动
对于 Intel 的显卡，你需要安装 i965-va-driver 这个包（它可能早就安装好了）

sudo apt install i965-va-driver
对于 Nvidia 的显卡（在开源的 Nouveau 驱动和闭源的 Nvidia 驱动上，它应该都有效）， 安装 vdpau-va-driver：

sudo apt install vdpau-va-driver
3、在 Chromium 启用硬件加速视频选项
复制这串地址，粘贴进 Chromium 的 URL 栏: chrome://flags/#enable-accelerated-video （或者在 chrome://flags 搜索 Hardware-accelerated video ）并启用它，然后重启 Chromium 浏览器。

在默认的 Google Chrome / Chromium 版本，这个选项不可用，但是你可以在启用了 VP-API 的 Chromium 版本启用它。

4、安装 h264ify[9] Chrome 扩展
YouTube（可能还有其它一些网址也是如此）默认使用 VP8 或 VP9 编码解码器，许多 GPU 不支持这种编码解码器的硬件解码。h264ify 会强制 YouTube 使用大多数 GPU 都支持的 H.264 而不是 VP8/VP9。

这个扩展还能阻塞 60fps 的视频，对低性能机器有用。

你可以在视频上右键点击，并且选择 Stats for nerds 以查看 Youtube 视频所使用额编码解码器，如果启用了 h264ify 扩展，你可以看到编码解码器是 avc / mp4a。如果没有启用，编码解码器应该是 vp09 / opus。

如何检查 Chromium 是否在使用 GPU 视频解码
在 YouTube 打开一个视频，然后，在 Chromium 打开一个新的标签页并将以下地址输入 URL 栏：chrome://media-internals。

在 chrome://media-internals 标签页中，点击视频的 URL（为了展开它）， 往下滚动查看 Player Properties 的下面，你应该可以找到 video_decoder 属性。如果video_decoder 的值是 GpuVideoDecoder ，这说明当前在另一个标签页播放的 YouTube 视频正在使用硬件加速的的视频解码。



如果它显示的是 FFmpegVideoDecoder 或 VpxVideoDecoder ，说明加速视频解码无效或者你忘记安装或禁用了 h264ify 这个 Chrome 扩展。

如果无效，你可以通过在命令行运行 chromium-browser ，通过查看是否有 VA-API 相关的错误显示出来以调试。你也可以运行 vainfo（在 Ubuntu 或 Linux Mint 上安装：sudo apt install vainfo）和 vdpauinfo （对于 Nvidia，在 Ubuntu 或 Linux Mint 上安装：sudo apt install vdpauinfo）并且查看是否有显示任何错误。

via: https://www.linuxuprising.com/2018/08/how-to-enable-hardware-accelerated.html

作者：Logix[10] 选题：lujun9972[11] 译者：GraveAccent[12] 校对：wxy[13]

本文由 LCTT[14] 原创编译，Linux中国[15] 荣誉推出

[1]: https://chromium-review.googlesource.com/c/chromium/src/+/532294
[2]: https://github.com/saiarcot895/chromium-ubuntu-build/tree/master/debian/patches
[3]: https://launchpad.net/%7Esaiarcot895/+archive/ubuntu/chromium-dev
[4]: https://aur.archlinux.org/packages/?O=0&SeB=nd&K=chromium+vaapi&outdated=&SB=n&SO=a&PP=50&do_Search=Go
[5]: https://aur.archlinux.org/packages/libva-vdpau-driver-chromium/
[6]: https://launchpad.net/%7Esaiarcot895/+archive/ubuntu/chromium-beta
[7]: https://launchpad.net/%7Esaiarcot895/+archive/ubuntu/chromium-dev/+packages
[8]: https://launchpad.net/%7Esaiarcot895/+archive/ubuntu/chromium-dev
[9]: https://chrome.google.com/webstore/detail/h264ify/aleakchihdccplidncghkekgioiakgal
[10]: https://plus.google.com/118280394805678839070
[11]: https://github.com/lujun9972
[12]: https://github.com/GraveAccent
[13]: https://github.com/wxy
[14]: https://github.com/LCTT/TranslateProject
[15]: https://linux.cn/article-10007-1.html?utm_source=rss&utm_medium=rss
