Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-11-21T16:48:51+08:00

====== 软件包管理 ======
Created Tuesday 21 November 2017

## apt

> Advanced Package Tool

- 软件源设置	/etc/apt/sources.list
- 更新软件源数据 `apt-get update`
- 更新已安装软件 `apt-get upgrade`
- 更换系统版本 `apt-get dist-upgrade`
- 通过安装包或卸载包来修复依赖错误 `apt-get -f install`
- 搜索软件源数据 `apt-cache search foo`
- 解压安装软件包 `apt-get install foo`
- 重新安装软件包 `apt-get --reinstall install foo`
- 删除软件包释放的内容 `apt-get remove foo`
- 卸载软件，同时清除该软件配置文件 `apt-get --purge remove foo`
- 删除不需要的包 `apt-get autoclean`
- 删除所有已下载的包 `apt-get clean`
- 自动安装编译一软件所需要的包 `apt-get build-dep foo`

## dpkg

> package manager for Debian

- 显示DEB包信息	 `dpkg -I xx.deb`
- 显示DEB包文件列表	 `dpkg -c xx.deb`
- 安装DEB包	 `dpkg -i xx.deb`
- 安装DEB包（指定根目录）	 `dpkg --root=<directory> -i xx.deb`
- 显示所有已安装软件	 `dpkg -l`
- 显示已安装包信息	 `dpkg -s foo`
- 显示已安装包文件列表	 `dpkg -L foo`
- 卸载包	 `dpkg -r foo`
- 卸载软件包并删除其配置文件	 `dpkg -P foo`
- 重新配置已安装程序	 `dpkg-reconfigure foo`

## 从软件源中编译软件流程

> 适用于少量代码改动或者配置修改

## 功能	具体语句	示例

- 获取源码	 `apt-get source foo`

  > apt-get source rox-filer

- 安装编译依赖	 `apt-get build-dep foo`

  > apt-get build-dep rox-filer

- 解压源码	 `dpkg-source -x foo_version-revision.dsc`

  > dpkg-source -x rox_2.11-3.dsc

- 修改源码部分	 `nano ROX-Filer/src/main.c`
- 创建包	 `dpkg-buildpackage -rfakeroot -b`
- 修改软件可升级状态	 `echo -e "foo hold" | dpkg --set-selections`


__## 概念：__
`deb`是debian linus的安装格式，跟red hat的rpm非常相似。
`dpkg`是Debian Package的简写，是为Debian 专门开发的套件管理系统，方便软件的安装、更新及移除。所有源自Debian的Linux发行版都使用dpkg

## 最基本的安装命令：
`dpkg -i file.deb`

## dpkg 的普通用法
1. `dpkg -i <package.deb>`
> 安装一个 Debian 软件包，如你手动下载的文件。
2. `dpkg -c <package.deb>`
> 列出 <package.deb> 的内容。
3. `dpkg -I <package.deb>`
> 从 <package.deb> 中提取包裹信息。
4. `dpkg -r <package>`
> 移除一个已安装的包裹。
5. `dpkg -P <package>`
> 完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。
6. `dpkg -L <package>`
> 列出 <package> 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。
7. `dpkg -s <package>`
> 显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .deb 文件中提取的包裹信息。
8. `dpkg-reconfigure <package>`
> 重新配制一个已经安装的包裹，如果它使用的是 debconf (debconf 为包裹安装提供了一个统一的配制界面)。



tags: 系统管理，软件包管理
