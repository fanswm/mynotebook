Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-11-24T11:59:07+08:00

====== 清理开机启动项 ======
Created Friday 24 November 2017

## 查看开机启动项
+ `systemctl list-unit-files --type=service | grep enabled`

## 停止项目
> 例如
+ `sudo systemctl stop bluetooth.service`
+ `sudo systemctl disable bluetooth.service`

## 通过下面命令确定是否操作成功
+ ` systemctl status bluetooth.service`

## 阻止该进程在任何情况下开机启动
> 停用的服务进程仍然能够被另外一个服务进程启动。如果你真的想在任何情况下系统启动时都不启动该进程，无需卸载该它，只需要把它掩盖起来就可以阻止该进程在任何情况下开机启动。

+ `sudo systemctl mask bluetooth.service`

## 卸载该程序
> 一旦你对禁用该进程启动而没有出现负面作用感到满意，你也可以选择卸载该程序。

## 获得如下服务列表
+ `systemctl list-unit-files --type=service`
> 你不能启用或禁用静态服务，因为静态服务被其他的进程所依赖，并不意味着它们自己运行.

## __哪些服务能够禁止__
+ accounts-daemon.service 是一个潜在的安全风险。它是 AccountsService 的一部分，AccountsService __允许程序获得或操作用户账户信息__。我不认为有好的理由能使我允许这样的后台操作，所以我选择掩盖mask该服务进程。
+ avahi-daemon.service 用于零配置网络发现，使电脑超容易发现网络中打印机或其他的主机，我总是禁用它，别漏掉它。
+ brltty.service 提供布莱叶盲文设备支持，例如布莱叶盲文显示器。
+ debug-shell.service 开放了一个巨大的安全漏洞（该服务提供了一个无密码的 root shell ，用于帮助 调试 systemd 问题），除非你正在使用该服务，否则永远不要启动服务。
+ ModemManager.service 该服务是一个被 dbus 激活的守护进程，用于提供移动宽频broadband（2G/3G/4G）接口，如果你没有该接口，无论是内置接口，还是通过如蓝牙配对的电话，以及 USB 适配器，那么你也无需该服务。
+ pppd-dns.service 是一个计算机发展的遗物，如果你使用拨号接入互联网的话，保留它，否则你不需要它。
+ rtkit-daemon.service 听起来很可怕，听起来像是 rootkit。 但是你需要该服务，因为它是一个实时内核调度器real-time kernel scheduler。
+ whoopsie.service 是 Ubuntu 错误报告服务。它用于收集 Ubuntu 系统崩溃报告，并发送报告到 https://daisy.ubuntu.com 。 你可以放心地禁止其启动，或者永久的卸载它。
+ wpa_supplicant.service 仅在你使用 Wi-Fi 连接时需要。
  

```
#!/bin/bash
# coding: utf-8

# accounts-daemon.service
systemctl stop accounts-daemon.service
systemctl disable accounts-daemon.service
systemctl mask accounts-daemon.service

# avahi-daemon.service
systemctl stop avahi-daemon.service
systemctl disable avahi-daemon.service
systemctl mask avahi-daemon.service

# bluetooth.service
systemctl stop bluetooth.service
systemctl disable bluetooth.service
systemctl mask bluetooth.service

# ModemManager.service
systemctl stop ModemManager.service
systemctl disable ModemManager.service
systemctl mask ModemManager.service

# pppd-dns.service
systemctl stop pppd-dns.service
systemctl disable pppd-dns.service
systemctl mask pppd-dns.service

# whoopsie.service
systemctl stop whoopsie.service
systemctl disable whoopsie.service
systemctl mask whoopsie.service

```

## 重演你的系统启动的所有消息
+ `journalctl -b`
  + 复审前一次启动
  > ` journalctl -b -1`
  + 复审倒数第 2 次启动
  > ` journalctl -b -2`
  > 类推
  
+ 过滤器
  > 我们以进程号为 1 的进程为例，该进程是所有其它进程的父进程.
  + `journalctl _PID=1`
  > 这些打印消息显示了什么被启动，或者是正在尝试启动。
  
+ 查看哪个服务进程启动耗时最长
  + `systemd-analyze blame`
  
  
