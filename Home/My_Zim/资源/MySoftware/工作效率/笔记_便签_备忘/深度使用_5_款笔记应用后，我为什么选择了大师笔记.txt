Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-04-25T15:31:51+08:00

====== 深度使用 5 款笔记应用后，我为什么选择了大师笔记 ======
创建日期 星期四 25 四月 2019

一个优秀的笔记应用应该是怎样的：谈谈大师笔记
1天前
liquid617
目录
不谈工具，先谈需求
最后一个笔记应用
大师之路
写在最后
Matrix 精选
Matrix 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的互联网领域经验、思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。

文章代表作者个人观点，少数派仅对标题和排版略作修改。

最近我在 Matrix 精选看到 大师笔记 开发者的文章，又适逢苦于找不到合适的笔记应用，于是安装体验了一段时间。从 iOS 的 Bear、Drafts，Windows 的 Typora，到全平台的 Notion，以及今天将提到的大师笔记，我已经体验过许多在不同设计理念下诞生的笔记应用。

不过，这篇文章我不想先谈「大师笔记究竟是不是一个好的笔记应用」。相反地，我想更多地从「理念」的角度谈谈：我们在用 Markdown 写作时，到底在追求什么？

（首先我想声明，这篇文章会包含很多主观观点和感性体验。鉴于我个人懂的不多，很可能会造成偏颇或错误，烦请指正。同时，阅读这篇文章也需要你对这方面的软件知识有一定了解。欢迎大家与我交流分享、增广见识。谢谢！）

不谈工具，先谈需求
无论是 Markdown 语言本身，还是各类支持 Markdown 的笔记软件，对我而言都不过是写作工具而已。也就是说：不是我去适应它，而是它本身就应是得心应手的。

当然，每个人的使用需求不同，心中优秀的笔记应用的模样也不同。所以在基本功能齐全、能够满足我的日常使用需求的情况下，能够提供直观、大量可调选项的笔记应用，才是我心目中的优秀的笔记应用。

市面上已经有太多的笔记应用，但找到一个适合自己的真的很难。下面我通过对自己使用需求的剖析，力求一探大家对 Markdown 笔记应用常见的需求、喜爱与缺憾。

我的需求
我是一个软件工程系的大一学生，日常的装备只有一台 Windows 系统的笔记本和一部 iPhone。我的笔记应用使用场景按使用频次可以归纳如下。

桌面端：

各类课上快速记录笔记
为公众号撰写定期或不定期的推送
为程序设计作业撰写开发文档等
手机端：

快速记录一些灵感
进行一些短篇创作、大纲撰写等
修改已经完成的文稿中的小错误
很明显地，我的需求按重要性从高到低排序应是：

写作效率：Markdown 语法的易用性
同步与格式：多平台、多用途、多格式
简便、快速：特别是 iOS 端的使用体验
文档系统：多特性、多维度
我相信对于很多学生，又或是不承担大量项目管理工作的朋友，对于笔记应用的需求应该和我以上四点非常类似。总结为一句话就是：好写好查好改。

Markdown 语法与写作手感
支持 Markdown 语法的笔记软件，总是喜欢对 Markdown 语法本身进行一些「魔改」，甚至干脆不支持部分格式。这是一个非常奇怪的趋势。

Markdown 是一种 标记语言。我们喜欢使用它，就是为了在双手不离开键盘的情况下，能够快速地使正在编辑的文本具有一定的格式。如果一个标记语言的标记语法都难以确定，其目的——效率就很难体现了。

如今的 Markdown 语法就像十多年前的 Web 设计一样：不同厂商出于自己对实用性的考量，制定了大量的规则，却没有一个机构或组织能够真正把它确定下来。

在这样的环境下，我认为：一个优秀的笔记应用应该放下自己的偏执，而去拥抱不同用户的习惯。如果使用过不同种类的 Markdown 笔记应用的用户，都能在这个应用中找到舒服的写作体验，那么它的用户群体自然会越来越宽广。

落实到实际操作，我认为：一个优秀的笔记应用应该给用户选择 Markdown 语法风格的权利。它应该可以选择或更改：

厂商改进过的语法方案或通用语法方案
个别格式的语法方案
用户自定义的语法方案
一个灵活的、可定制化的笔记应用就像一把瑞士军刀，从开快递箱的数码科技博主，到在密林里行军的特种兵，都能在这把轻巧的工具中找到适合自己的功能。

更有趣的是，一个笔记应用不会因为它支持 Markdown 语法而高级或易用很多。关于 Markdown 到底能提升多少效率，其实网上也有许多争论，这里我不展开说了。但我认为问题的关键不在于是富文本还是 Markdown，反而在于细枝末节处：

回车是换行还是换段落？
无序、有序列表能缩进多少层？
列表什么时候结束，什么时候开始？
引用、代码、注解、加粗、斜体的相互嵌套怎么解决？
插入图片是本地引用还是自动上传图床？
快捷键怎么安排？
……
许许多多这样的细枝末节的问题累加起来，才构成了一个笔记应用最终的使用手感。

一个好的笔记应用，应该十分符合人的输入直觉，能够智慧地感知你每一次操作的目的。你一上手，很快就能适应。而一个差的笔记应用，用户即使再努力地去适应所谓「优化过的 Markdown 语法」，也只会一直磕磕绊绊。

这让我想到在学习 Java 时，老师提到过它的一个特点：

鲁棒性 (Robust) : 鲁棒是 Robust 的音译，也就是健壮和强壮的意思。它是在异常和危险情况下系统生存的关键。比如说，计算机软件在输入错误、磁盘故障、网络过载或有意攻击情况下，能否不死机、不崩溃，就是该软件的鲁棒性。所谓「鲁棒性」，是指控制系统在一定（结构，大小）的参数摄动下，维持其它某些性能的特性。

总结下来，我想，笔记软件的写作效率，归根结底也是「鲁棒性」。它有多能容忍用户的无意识和习惯做法，它就会有多强大、稳定、易用。

「全平台同步」的迷思
在讨论「支持 Markdown 的笔记应用」时，我避开了桌面端和移动端的界限。

就像我需求中提到的一样，「一个优秀的笔记应用」的定义，在桌面端和移动端是不同的。桌面端重效率、功能、稳定性，移动端重便捷、体验、易用性，二者的使用场景造成了这样巨大的差异。

但「全平台同步」 在我看来，反而是非常重要的一个功能。这要求一款应用在文档、特性、功能同步的基础上，桌面端和移动端有各自不同的调性和巧思。而这恰恰是很难做到的，它需要开发人员对桌面端和移动端有着同样深刻的了解，并能把二者的体验打磨得十分连贯。

这种「连贯性」体现在何处？

UI 设计的连贯性： 如何将桌面端的设计元素下放到移动端？其实这一点是比较好达成的，目前的一些产品（如 Notion） 已经在这一点上做的很好了。当然，这和它 Web 应用的本质是分不开的。
使用逻辑的连贯性： 桌面端的笔记应用为了功能的强大，使用逻辑常常十分庞杂。移动端应该在怎样的程度上保留功能、简化流程，而又不失连贯性，这是十分值得探究的。
文档撰写的连贯性： 即在一台设备上编辑后，同步到所有平台上的速度。当然，同步速度是一个比较复杂的问题，用户的数量、公司的体量等等都可以影响到同步的速度。这一点上许多厂商已经做得很好了。
Notion 桌面端
Notion 桌面端

Notion 移动端
Notion 移动端
除此之外，一篇文稿写成后，并不总是只留在笔记应用中。相反地，很多时候都是要派其他用途的：

公众号文章：导出 HTML 文件，需要细致地排版（可能用到 CSS）
论文、文章、讨论稿：需要导出多种格式，如 PDF、Word 等
留作复习笔记：需保存在本地或云端
上台做 pre 时的大纲：针对移动端同步
……
我想指出的是「同步」不只是自己与自己同步，却常常是要与别人「同步」。md 这样一个相对小众的文件格式并不适合分享，因此支持导出其他文件格式也是相对比较重要的。更有甚者连导出本地 md 文件都不支持，这一点的弊端我在后文将提到。

轻量化的移动端
如果说手机是碎片时间的入口，那么移动端笔记应用就是碎片化写作的入口。

移动端笔记应用
移动端笔记应用
通过日常的使用我发现，绝大多数的手机写作场景都是：

碎片化的
记录灵感
记录简单信息
进行短篇创作
它不需要多么强大的生产力或者多么强力的功能，为数不多的要求是：

使用简洁
软件轻量
分享、同步、查看便捷
在这方面，我感觉 iOS 上的 Drafts 可以说是做的比较好的，即使它是一款「非典型笔记应用」。脱离应用实际体验，这一点其实是很难讲的，所以我们稍后再谈。

被遗忘的文档系统
作为一个笔记应用，在「好写」、「好改」的基础上，「好查」也是十分重要的，这就要求应用提供一个高效、简洁、功能性强的文档系统。

但目前的很多笔记应用（特别是从移动端起家的一些应用），少有文档系统的概念。它们要不只是简单地用所谓「标签」来归类，要不在桌面端完全无法导出为文件，再或者干脆使用体验极差。

那么为什么会形成这样的情况呢？我想这一点和我之前提到的移动端笔记应用「轻量、快速」 的需求是分不开的。试想，如果厂商做一个「即开即用」的移动端笔记应用，那必然不会优先考虑文档系统，这是由「快速记录、简单修改」的使用场景决定的。但在笔记应用桌面化的今天，也有越来越多的厂商开始注重文档系统的建设。

我认为，文档系统的设计模式大致可以概括如下：

传统的「文件夹 - 文档」模式
标签分类模式
本地泛文档模式
前两点都很好理解，第三点我想具体说明一下。

我们知道使用 Markdown 语言撰写笔记、查看笔记，在今天依然是一个非常个人化的行为，因为你很难直接用 md 格式的文稿和他人分享。同样地，他人分享来的文稿也常常会是 Word、PDF、Pages 等格式，更不用谈我们日常的项目中还会有许多其他类型的文件，例如图片、视频、代码、表格等等。

如果仅是把自己撰写的笔记分类得整整齐齐，而无法方便地管理其他格式的文件，这样的文档系统也是相对无意义的。笔记文稿被从其归属的文件堆中剥离出来，是不符合使用逻辑的。

这就引出了一个关键的问题：文档管理究竟应该只停留在应用内部，还是应该依赖于环境的文档系统？

事实上通过以上的论述你可以发现，我更倾向于后者。虽然目前有这样设计思路的应用我所知甚少，VS Code 勉强可以算一个。

VS Code
VS Code
如果不强求在软件内完成所有资料的归类和查看，那么其实只要应用具备导出 md 格式的功能就已经可以基本满足这一点需求了。

要多强大才算优秀
以上我列举了四个我最重视，也可能是大家最关注的笔记应用的常见需求。

一个优秀的笔记应用是否应该完美地覆盖以上所有的需求？这个问题就像写代码应该用 IDE 还是用像 VS Code 这样轻量化的代码编辑器一样，我认为是难以产生定论的。

要多强大才算优秀？我想说的强大并不是事无巨细地涵盖所有可能的需求，而是如文章开头所言，我们应该找到合适自己的、得心应手的笔记应用。下面我想通过分析市场上已经存在的、具有一定质量的笔记应用在以上四个维度的使用特点，做一些非常简单且主观的归纳和参考。

最后一个笔记应用
少数派一直是一个关注 Markdown、支持 Markdown 的网站，在少数派我也认识了许多支持 Markdown 的笔记应用。期间我体会到，由于各个公司的设计理念、目标人群，甚至公司体量的不同，市场上的笔记应用的风格也大相径庭。

例如：

Bear (iOS、Mac)：一个小型笔记应用，主打美观和效率并行，并对 Markdown 语法做了一定的改动。
Drafts (iOS、Mac) ：一个草稿应用，主打快速记录，是文字信息的收发站，有许多 Action 可与其他 App 联动。（在我写这篇文章的期间它已经出了 Mac 上的正式版。）
Typora (Windows、Mac、Linux)：一个桌面端的笔记应用，配合 Pandoc 可以非常好地支持导出各类格式的文件，功能强大。
Notion (iOS、Android、Mac、Windows)：一个全平台的 Web 应用，界面美观，使用逻辑有新意，但在使用体验上还有待改进。
再加上正在体验的大师笔记，以上就是我长期使用过的一些笔记应用。但由于大师笔记的特殊性，我想之后再单独谈谈。

Windows 用户的困境
正如我之前反复提到的，笔记应用非常重要、核心的功能是全平台同步（至少是你所拥有的设备的全平台同步）。但出于种种原因，Windows 上高质量、有特色的 Markdown 笔记应用少之又少。我前文提到的 Typora、Notion 和大师笔记是为数不多我认为拿得出手且有特色的笔记应用。

纠结再三，我决定在以下的应用分析部分中，仅以一个 Windows 用户的视角来写，而不对不了解的 Mac 平台的应用选择妄加评论。如果你是 Mac 用户，可以直接从我关于大师笔记的第三部分继续看起。

Bear
Bear 是我第一个接触的支持 Markdown 语言的笔记应用。其实以它为 Markdown 入门并不是一个很好的选择，因为它修改了一些 Markdown 的基本语法——虽然这是可在软件内更改的（你可以在「设置 - 通用」中选择是否开启「Markdown 兼容模式」）。写作手感称不上出色，常常可能碰到无序、有序列表呈现的状态和想象中不一样的情况。

Bear
Bear
Bear 目前只支持 iOS 和 Mac 的同步，所以并不在我的主力笔记应用的行列中。但由于它美观、直接、优雅的 UI 设计，有时我还是会用一两次。我认为 Bear 的 UI 设计是它的亮点之一，虽然不可调的页边距很大程度地影响了手机端的写作体验。

Bear 在移动端的设计还是相对轻量的，但该有的功能都打磨得相当精致，这里就不细说了。

此外，「可以设置多层标签」是一个文档系统方面的功能亮点。这样的做法既保留了标签系统的整体性，又不会让搜索变得非常呆板。

举例来说，如果许多文档都有名字相同的 #未完成 的标签，却属于不同的大类标签，比如一个是 #程序设计 ，另一个是 #少数派 。那么我在全局搜索未完成的少数派文章时也会得到很多未完成的程序设计文档，这使得使用体验很差。加入标签归属就可以快速定位想要的内容，也可以提供类似于文件夹一样的使用体验。

那为什么我们不直接用「文件夹 - 文件」的模式呢？标签模式的设计初衷就是一篇文稿可以有多个标签， 从而提供多元、直观的归类方案，而不是单一的、有指向性的方案。

Drafts
前文提到，我认为 Drafts 是一款「非典型笔记应用」。诚然，它最低限度地具备很多笔记应用该有的基本功能：支持 Markdown、标签系统、同步系统（仅 iCloud），但我认为 Drafts 与其说是一款「笔记应用」，倒不如说是一个移动端文本入口。（他们官网的 Slogan 就是 Drafts. Where Text Starts.）

Drafts
Drafts
Drafts 最大的特点就是「即开即用」，写好后再考虑这份文稿的用途。是要复制到别的应用？还是只是记录一瞬间的灵感？还是要通过 Action 进行其他更复杂的处理？在输入完最重要的文本之后，你大可再慢慢考虑这方面的事情。这对于手机上的碎片化使用场景其实是非常适用的。

这一点让它成为我心目中移动端笔记应用的典范：不喧宾夺主，默默地收集所有的文字碎片，并给你最快捷的处理他们的办法。

从此你再也不用在各个软件之间「专事专办」了，面对的只有 Drafts 克制自由的蓝白色界面。事实上，配合 Action、URL Scheme、Workspace 这些特性，Drafts 简约直白的外表下藏着一个功能史无前例强大的效率工具的内核。

Typora
我想开门见山地直言，Typora 是我在桌面端最喜爱的生产力应用。它的功能之强大、设计之冷静、体验之美妙、理念之先进，我认为值得所有笔记应用厂商学习。

Typora
Typora
打开软件，界面只有菜单栏若干几个选项和一个空白的输入区域。但这个简约的软件所支持的功能之多，却令人叹为观止。

实时预览 Markdown 格式效果，而不是常见的左右分栏的设计。但同时还保留了「源代码模式」，让你在显示格式不符合预期时可以进行微调。（它的 Markdown 输入手感真是一流！）
配合 Pandoc 你可以轻松地将文件导出为 PDF、HTML、Word、移动端长图，以及许多学术相关的文件格式。
支持 LaTeX 等公式符号、表格、代码、图片外链……基本你能想到的文稿内容它都支持并可以实时预览。
支持根据文章的大小标题自动生成目录（大纲）。
支持文件列表 / 文件树视图（仅支持 md 文件）。
除此以外，它还拥有一些「浏览器」相关的功能：

支持对界面套用 CSS 并实时显示，仅需在本地主题文件夹中加入你的 CSS 文件即可。
支持 DevTools，也就是浏览器的审查元素。
支持一键复制 HTML 代码。
我常用 Typora 写微信公众号推文：撰写文稿，套用固定 CSS，一键复制 HTML 代码。这样就完成了从撰写到基本排版的工作，我只需将 HTML 代码粘贴到微信公众号后台，再进行一些微调即可。大幅节省了工作量的同时，还保证了每次推送的格式基本相同，阅读体验更好。

当然它也不是没有缺点的。没有移动端应用，不支持云端同步，甚至没有应用内部的文件管理，导致使用模式基本是在文件夹中直接打开 md 文件。它是一款将生产效率发挥到极致的笔记应用，能够包办你生产过程中的绝大部分内容，但任何一点无关「产出文稿」的事它都不会去做。

Notion
少数派有 文章 提到 Notion 是一款「来自未来的笔记协作工具」，我十分同意这一观点。无论是它 Web 应用的本质，还是它创新的「模块化」使用逻辑，都仿佛是来自未来的笔记应用解决方案。

Notion
Notion
文档系统一直是各类笔记应用的老大难问题。做简单了没有分类的意义和效果，做复杂了又会浪费太多时间在无意义的打标签、建目录上。

Notion 仅用一个「模块化」的概念就解决了这一问题。 任何文章（Page）下都可以再插入许多模块（Block）：其他文章、段落、列表、链接、图片、视频、代码、看板，甚至 PDF、谷歌地图……

因此，一篇文章（Page）可能不是一篇实际意义上的文稿，却是许多文章的父集（或者说，一个笔记本）。再配合文章链接等模块，一个极简理念下的文档系统就诞生了。

对于 Notion 来说，Web 应用的本质是一把双刃剑。

优点：

全平台的应用开发和维护更新不是难事。
可以很轻松地做到多平台使用体验的连贯。
应用占用存储空间很少。
各种各样的模块可以很方便地下放到移动端，使 Notion 的移动端功能十分强大。
缺点：

性能低下，文字量多或内容复杂时，会占用一定内存。
在线和离线状态的使用体验有一定差距，有时还需要梯子。
使用手感不好，常常难以达成想要的格式。目前对 Markdown 的支持（特别是中文内容）也不够好。
和桌面端几乎相同的界面设计使得 Notion 的移动端编辑体验称不上简洁快速。
Notion 的模块化设计使其成为一个天马行空的产品，用户可以在多种多样（并且持续更新）的模块之上，搭建出属于自己的功能强大的笔记。

最后「一个」笔记应用
每个应用有每个应用的好，但如果为了达到自己的需求而反复在各个笔记应用中切换，着实是一件很麻烦的事。一篇文稿在若干应用间奔波，不说适应软件不同语法的问题，你的文档系统最终也会变得一团糟。

我相信每个用 Markdown 写作的朋友，都在等那「最后一个笔记应用」。如果能有一个应用能满足你的所有需求，却又不显得臃肿复杂，那该多好！但很可惜，就我个人经验而言，到现在我还没找到最适合我的笔记应用，包括接下来将着重讲的大师笔记。

大师之路
大师笔记 的英文名是 Masterway，直译「大师之路」。Markdown 笔记应用经历了好几年的发展，在不同设计理念的引领下产生了许多不同的形态。一个应用成为「优秀的笔记应用」，要走过多长的「大师之路」？

大师笔记
大师笔记
在体验大师笔记的过程中，我发现大师笔记其实吸纳了许多其他笔记应用优秀的设计思路。下面我想继续以前文强调的四个维度来分析大师笔记的功能亮点。

（截止到初稿完成，我的大师笔记 Windows 端版本号为 0.5.3，iOS 端版本号为 1.2.4。）

Markdown 语法
大师笔记在对 Markdown 语法做一定修改、扩展的基础上，推出了自家的 mmd 语法（也包括 mmd 格式的文件）。它的开发者是这样描述 mmd 的设计理念的：

mmd 是 Masterway 在基础 Markdown 之上，为应对图片，音视频等等多媒体场景而创建的一个简单扩展。mmd 对绝大部分的基础 Markdown 语法，如标题，字体风格，网页链接🔗，图片链接等等，mmd 都提供了支持。同时，在基础语法和扩展两方面做了一些谨慎的尝试。

mmd
mmd
具体的改动内容你可以在 这篇文章 中查看。

兼容性问题
任何企图对 Markdown 语法进行改进的厂商都面临着兼容性的问题。其中又可被分为两点：

应该怎么兼容用户之前的使用习惯？
应该如何保证自己的改进语法能被其他平台兼容？
前者就是我之前提到的，「笔记应用厂商应该拥抱用户的习惯」。但很遗憾，目前大师笔记并不支持在各类 Markdown 语法风格之间进行任何的切换。

不过在后者上，大师笔记还是做得比较好的。它在支持导出为自家 mmd 格式文件的同时，也支持广泛使用的 md 格式文件。软件会自动帮你将 mmd 有所改动的语法替换为 Markdown 的通用语法。

为此，我专门测试了所有 mmd 与通用 md 格式中不同或增广的语法格式，把它们写成一个文档，并导出成 md 格式。

mmd格式测试 - mmd
mmd格式测试 - mmd
mmd特殊格式 - md
mmd特殊格式 - md
除了应用内部的笔记链接，基本所有的扩展语法都能被比较好地修正。其实我认为不把笔记链接转化为共享的网页链接，一定程度上是出于对用户隐私的考虑。如果我一不小心忘记文稿中链接了其他文稿，又把这篇文稿导出为 md 格式分享给了别人，其实可能带来很大的不便。

多媒体的野心
开发者在 mmd 中扩展了插入视频的功能。你可以在笔记中插入：

普通视频链接
Youtube 视频链接
Bilibili 视频链接
mmd 视频链接
mmd 视频链接
虽然只是很简单的功能，但我从中看出了大师笔记开发者的「多媒体的野心」。这让我想到 Notion——一个笔记应用的手究竟应该伸多远？

对于这个问题 Notion 也许已经给出了自己的答案，就像 沨沄极客 说的，他们想做一个「电子手账」。你可以在 Notion 中完成任务管理、多媒体展示、待办事项、日程规划……

那大师笔记呢？目前我还不得而知。但很显然地，视频也可以是笔记中非常重要的一部分。我认为这至少是电子化笔记探索路上的一步。

写作手感
写作手感一直是一个比较玄学的东西，它由很多方面的因素决定（也包含很多的个人喜好），因此在前文中我也很少用到这个评价标准。而且在谈到一个笔记应用的「写作手感」的时候，我们常常会想到一些负面的印象，却很难描述这个「手感」好在哪里。

大师笔记编辑界面
大师笔记编辑界面
你正在阅读的这篇文章的初稿是我全程在大师笔记中撰写的。期间我和朋友抱怨过：「如果不是要测评这个软件，我真想用 Typora 来写！」我只能说它并没能给我带来比较好的写作体验。这个毛病在比较新的应用上都有所体现，例如 Notion 的写作体验也很糟糕。下面我将一一列举一些让我感到不满的问题（但这不代表你一定会不喜欢它。请下载后亲自尝试一番再做评价！）：

有许多语法标记（如斜体 _、注解 >、引用 '）都属于半角符号，而在中文输入法下默认是全角符号，再加上没有快捷键或右键菜单，想打出来这些符号比较麻烦。
支持 mmd 语法联想，但是填入居然是按 ⇥tab ，而一般的 IDE 都是 ⌅Enter。
换段需要手动打一行空行，否则会造成有序列表序号不归零的情况。
但不打那一行空行在软件里似乎也能实现一种「没有段间距的换段」，当然导出到软件外就没有换段了。
标签系统的字体颜色似乎是随机的，经常会碰到一些明度非常高的颜色，难以识别。
所有的无序、有序列表的符号后面加不加空格都能正常显示，最多是一个空格的缩进问题，但唯独 * 后面必须跟一个空格才能显示成无序列表，否则就是普通字符。
不支持任何编辑界面的快捷键操作（如 ⌃Ctrl+B 加粗选中文字 / 生成两个 *），除了 ⌃Ctrl+S 保存。
⌃Ctrl+S 保存后会自动进入浏览模式，可是有的时候我只想保存一下进度防止文件丢失。不用 ⌃Ctrl+S 保存，手机端也不会实时同步。
应用其他方面也多多少少有一些影响我使用体验的地方，在此我就不一一列举了。

不过我想说的是，作为一个比较新的应用，有一些小毛小病是非常正常的事情，特别是在想构造一个新概念的应用时。期待开发者能将其打磨得更精致。

移动端的使用体验
可能是由于移动端的开发晚于桌面端的原因，目前大师笔记的移动端仍然是一个非常简陋的状态。（请允许我用这样一个比较严重的词。）

iOS 上的大师笔记应用基本可以用四页来概括：首页、文件夹分类、浏览界面、编辑界面。

其中首页和文件分类页面做得还是比较精致美观的，也和桌面上的使用逻辑很像。浏览界面是我认为做得最好看的。 没有恼人的状态栏，文字内容填满全面屏的每一寸，让人看得赏心悦目。字体大小、行间距、段落间距等也做得很合适。

大师笔记移动端
大师笔记移动端
但编辑界面可以说几乎是不可用的：

虽然有格式快捷按钮，但是其粗糙程度让我很难承认它是「按钮」。
文字部分没有任何格式实时预览，也没有 Markdown 语法高亮等等，使用体验很差。
字体大小、行间距、段落间距和浏览界面完全不同，虽然有预览功能不至于不知道自己在写什么，但视觉感受十分拥挤。
可以说，大师笔记的移动端目前只能修改文稿中的一些小错误，还很难进行任何创作。

同时，移动端强制先写标签、再写标题和正文的设定也让我用得很不舒服（你不能点击下一行直接开始写标题或正文）。保存时你也只能存到某个项目中（我将在下一部分介绍大师笔记的文档系统），没有一个暂存处。这一点其实是和之前提到的「快速记录灵感」的需求完全相悖的。

文档系统
大师笔记的文档系统吸纳了许多笔记软件的优点。

大师笔记文档系统
大师笔记文档系统
首先，它以传统的「文件夹 - 文件」的形式作为基础：文件夹对应的是项目，文件对应的是笔记（Line）。

其次，每个笔记的第一行固定为标签行。你可以在其中加上这篇笔记相关的标签。如果你不作任何改动，则这篇笔记的标签为 #默认标签 。在笔记最下方有一个LineId，它表示了这篇笔记在这个项目中的创建顺序，因此每个 LineId 在项目内部都是独一无二的，你可以在软件内链接文稿时用到它。

我认为最特别的属看板功能。每个项目会自带一个默认看板，其中包含你所有的笔记（以标签的分类方式呈现）。你也可以在看板界面直接添加新标签列，并向其中添加笔记。

除此以外，看板还有一个公共标签的功能。在创建新看板时，你可以选择是否添加公共标签。如果你设定某个标签为这个看板的公共标签，那么在此看板中只会显示有公共标签的笔记。这时你添加新标签列，则会显示同时有新标签和公共标签的笔记。

大师笔记希望通过这样的「项目 - 看板 - 标签 - 笔记 - LineId」 系统来管理文档。

搜索功能方面，目前大师笔记仅支持通过标签或 LineId 在特定项目内搜索笔记，不支持任何的关键词搜索。

那么这样一个看起来有些复杂的文档系统使用体验究竟如何呢？

我认为，看板功能有些鸡肋。目前大师笔记的看板功能仅仅局限于根据一个或多个标签对笔记分类、展示，而这样的功能用搜索其实已经可以实现。任务进度管理、任务到期查询、人员分配、团队合作等等看板更重要的功能，在大师笔记上其实是缺失的。

如果大师笔记希望做一个团队协作软件，这一方面应该跟进开发。但如果只是为了让用户更直观地查看自己的笔记，我认为把搜索界面做得更明朗一些即可，不必再额外增加一个看板功能。

同时，大师笔记的项目和看板的显示是有很大区别的。

项目视图下： 所有笔记被集中摆放在中间列，能显示出的笔记数量很少。界面右侧是文档编辑和浏览区域。但我感到这种偏向屏幕一侧的编辑界面并不适合长时间的撰写，而更适合一边写一边查阅项目中的其他资料。

大师笔记项目视图
大师笔记项目视图
看板视图下： 所有笔记以看板的形式陈列出来，可以一眼就看到每个标签下的笔记有哪些。编辑界面则是位于画面中央的。我认为这样的视图更适合需要集中注意力的长时间、长篇撰写。

大师笔记看板
大师笔记看板
此外，在两个视图下你都可以按 F11 进入全屏浏览 / 编辑模式。

而 LineId 链接我认为是比较失败的部分。试想这样一个场景：当我想要在笔记中链接到另一篇笔记时，我要先保存，然后跳出编辑界面去找那篇笔记的 LineId 并记住，如果我想要给这个链接加一个标题我还要同时记住那篇笔记的标题。然后回到原笔记的编辑界面，用# 标记 LineId，再切换英文用半角符号 ,、" 加标题。这个功能如果在界面上能提示项目或特定标签中的所有笔记，直接交给用户挑选，使用体验会好得多。

大师笔记内链
大师笔记内链
虽然没有关键词搜索，但我认为大师笔记的「仅在项目内部搜索标签」的设计理念是很合理的。这一点在之前 Bear 的部分提到过，就不再赘述了。

木桶原理
如果你读到这，你应该会发现我对大师笔记有许多的不满，这些不满很多都出自一些由于开发经验不足导致的小问题。但我目前还是打算把大师笔记用作主力笔记应用，只是在移动端用 Drafts 辅助，这是为什么呢？

就像木桶原理所说的，我认为笔记应用作为一个工具，其易用性不是由其亮点功能所撑起的，而是由底线的功能支持决定的。

例如我的底线需求是 Windows 和 iOS 平台同步，而后是写作手感有所保证。这两点其实已经可以刷掉许多市面上的笔记应用了：

没有 Windows 端的 Bear 和 Drafts 首先就不在我的考虑范围内了。
Typora 手感很好，但没有 iOS 端，也没有一个好的文档系统。
Notion 有许多新奇的功能，但写作手感和使用体验过于粗糙。
你会发现尽管它们都有许多显眼的功能和优秀的体验，但最终是需求短板让我选择了大师笔记。或者说，尽管大师笔记有许许多多令人心烦的毛病，但它是为数不多的能满足我个人需求的笔记应用，因此我才会去使用它。

虽然这是一篇纯粹从个人需求角度出发的文章，但我希望通过我的一些分析过程，给大家在选择笔记应用时带来一些启发：

我的需求有哪些？
我的底线需求是什么？
XX 功能对我来说真的重要吗？
XX 功能真的有用吗？
写在最后
大师笔记其实不能算一个新应用，它的开发者早在 2017 年底就在少数派上发过介绍文章。但我还是在使用过程中遇到了很多小毛小病，有些甚至极大地影响了我的体验。我不想在此一一列举，因为这对于一个还在 beta 版本的应用是不公平的。但我想简单说明两个比较严重的问题：

无法自动保存，只能手动按完成键，但这样又会退出编辑状态。这导致我不常有点击「完成」的意识，直到我有一次按到 F6 从看板进入到项目界面，发现我刚才写的一大段文字都没了。和手机端的同步也有一些问题，会有延迟同步甚至桌面端文字丢失的问题。

应用退出不完全，导致下次使用时可能无法打开，需要开任务管理器杀进程。

我很欣赏开发者做全平台功能性笔记应用的决心，我也认为他们知道这意味着多大的工作量。我希望开发者在构思新功能时也可以兼顾到一些使用体验上的问题，毕竟这才是一个笔记应用的灵魂。令人欣喜的是开发者们也在建设大师笔记的 社区，提交 bug 的反馈很迅速，基本在一到二个工作日内可以得到答复。

一个小学徒要经过多少磨砺才能成为大师？ 正如 Masterway 这个名字一样，我想这是用户和开发者可以共勉的。

祝大师笔记 Masterway 开发顺利！
https://sspai.com/post/54122
