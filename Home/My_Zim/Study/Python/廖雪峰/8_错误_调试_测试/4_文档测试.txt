Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-01-02T14:00:46+08:00

====== 4 文档测试 ======
创建日期 星期四 02 一月 2020

如果你经常阅读Python的官方文档，可以看到很多文档都有示例代码。比如re模块就带了很多示例代码：
>>> import re
>>> m = re.search('(?<=abc)def', 'abcdef')
>>> m.group(0)
'def'
可以把这些示例代码在Python的交互式环境下输入并执行，结果与文档中的示例代码显示的一致。
这些代码与其他说明可以写在注释中，然后，由一些工具来自动生成文档。既然这些代码本身就可以粘贴出来直接运行，那么，可不可以自动执行写在注释中的这些代码呢？
答案是肯定的。
当我们编写注释时，如果写上这样的注释：
def abs(n):
	'''
	Function to get absolute value of number.
	Example:
	>>> abs(1)
	1
	>>> abs(-1)
	1
	>>> abs(0)
	0
	'''
	return n if n >= 0 else (-n)
__无疑更明确地告诉函数的调用者该函数的期望输入和输出。__
__并且，Python内置的“文档测试”（doctest）模块可以直接提取注释中的代码并执行测试。__
doctest严格按照Python交互式命令行的输入和输出来判断测试结果是否正确。只有测试异常的时候，可以用...表示中间一大段烦人的输出。
让我们用doctest来测试上次编写的Dict类：
# mydict2.py
class Dict(dict):
	'''
	Simple dict but also support access as x.y style.
	>>> d1 = Dict()
	>>> d1['x'] = 100
	>>> d1.x
	100
	>>> d1.y = 200
	>>> d1['y']
	200
	>>> d2 = Dict(a=1, b=2, c='3')
	>>> d2.c
	'3'
	>>> d2['empty']
	Traceback (most recent call last):
		...
	KeyError: 'empty'
	>>> d2.empty
	Traceback (most recent call last):
		...
	AttributeError: 'Dict' object has no attribute 'empty'
	'''
	def  _  _ init _  _ (self, **kw):
		super(Dict, self). _  _ init _  _ (**kw)
	def  _  _ getattr _  _ (self, key):
		try:
			return self[key]
		except KeyError:
			raise AttributeError(r"'Dict' object has no attribute '%s'" % key)
	def  _  _ setattr _  _ (self, key, value):
		self[key] = value
if  _  _ name _  _ ==' _  _ main _  _ ':
	import doctest
	doctest.testmod()
运行python mydict2.py：
$ python mydict2.py
什么输出也没有。这说明我们编写的doctest运行都是正确的。如果程序有问题，比如把 _  _ getattr _  _ ()方法注释掉，再运行就会报错：
$ python mydict2.py
**********************************************************************
File "/Users/michael/Github/learn-python3/samples/debug/mydict2.py", line 10, in  _  _ main _  _ .Dict
Failed example:
	d1.x
Exception raised:
	Traceback (most recent call last):
	  ...
	AttributeError: 'Dict' object has no attribute 'x'
**********************************************************************
File "/Users/michael/Github/learn-python3/samples/debug/mydict2.py", line 16, in  _  _ main _  _ .Dict
Failed example:
	d2.c
Exception raised:
	Traceback (most recent call last):
	  ...
	AttributeError: 'Dict' object has no attribute 'c'
**********************************************************************
1 items had failures:
   2 of   9 in  _  _ main _  _ .Dict
***Test Failed*** 2 failures.
注意到最后3行代码。当模块正常导入时，doctest不会被执行。只有在命令行直接运行时，才执行doctest。所以，不必担心doctest会在非测试环境下执行。
练习
对函数fact(n)编写doctest并执行：
# -*- coding: utf-8 -*-
if  _  _ name _  _  == ' _  _ main _  _ ':
	import doctest
	doctest.testmod()
小结
__doctest非常有用，不但可以用来测试，还可以直接作为示例代码__。通过某些文档生成工具，就可以自动把包含doctest的注释提取出来。用户看文档的时候，同时也看到了doctest。
