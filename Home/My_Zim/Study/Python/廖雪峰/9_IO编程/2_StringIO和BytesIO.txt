Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-01-02T16:55:23+08:00

====== 2 StringIO和BytesIO ======
创建日期 星期四 02 一月 2020

StringIO

很多时候，__数据读写不一定是文件，也可以在内存中读写。__

__StringIO顾名思义就是在内存中读写str。__

__要把str写入StringIO，我们需要先创建一个StringIO，然后，像文件一样写入即可：__

>>>__ from io import StringIO__
__>>> f = StringIO()__
__>>> f.write('hello')__
5
>>> f.write(' ')
1
>>> f.write('world!')
6
>>> print(f.getvalue())
hello world!

__getvalue()方法用于获得写入后的str。__

__要读取StringIO，可以用一个str初始化StringIO，然后，像读文件一样读取：__

__>>> from io import StringIO__
__>>> f = StringIO('Hello!\nHi!\nGoodbye!')__
__>>> while True:__
__...     s = f.readline()__
__...     if s == '':__
__...         break__
__...     print(s.strip())__
...
Hello!
Hi!
Goodbye!

__BytesIO__

__StringIO操作的只能是str，如果要操作二进制数据，就需要使用BytesIO。__

BytesIO实现了在内存中读写bytes，我们创建一个BytesIO，然后写入一些bytes：

__>>> from io import BytesIO__
__>>> f = BytesIO()__
__>>> f.write('中文'.encode('utf-8'))__
6
>>> print(f.getvalue())
b'\xe4\xb8\xad\xe6\x96\x87'

__请注意，写入的不是str，而是经过UTF-8编码的bytes。__

和StringIO类似，__可以用一个bytes初始化BytesIO，然后，像读文件一样读取：__

>>> from io import BytesIO
>>> f = BytesIO(b'\xe4\xb8\xad\xe6\x96\x87')
>>> f.read()
b'\xe4\xb8\xad\xe6\x96\x87'

小结

__StringIO和BytesIO是在内存中操作str和bytes的方法，使得和读写文件具有一致的接口__。
